
Labb4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  000020ce  00002162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000020ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035b  0080014a  0080014a  000021ac  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000021ac  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000248  00000000  00000000  0000221c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002984  00000000  00000000  00002464  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001052  00000000  00000000  00004de8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001582  00000000  00000000  00005e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c9c  00000000  00000000  000073bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000945  00000000  00000000  00008058  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000028c8  00000000  00000000  0000899d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  0000b265  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__vector_1>
       8:	0c 94 1d 05 	jmp	0xa3a	; 0xa3a <__vector_2>
       c:	0c 94 8c 05 	jmp	0xb18	; 0xb18 <__vector_3>
      10:	0c 94 fb 05 	jmp	0xbf6	; 0xbf6 <__vector_4>
      14:	0c 94 6a 06 	jmp	0xcd4	; 0xcd4 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 83 0c 	jmp	0x1906	; 0x1906 <__vector_9>
      28:	0c 94 d9 06 	jmp	0xdb2	; 0xdb2 <__vector_10>
      2c:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__vector_11>
      30:	0c 94 b7 07 	jmp	0xf6e	; 0xf6e <__vector_12>
      34:	0c 94 26 08 	jmp	0x104c	; 0x104c <__vector_13>
      38:	0c 94 95 08 	jmp	0x112a	; 0x112a <__vector_14>
      3c:	0c 94 04 09 	jmp	0x1208	; 0x1208 <__vector_15>
      40:	0c 94 73 09 	jmp	0x12e6	; 0x12e6 <__vector_16>
      44:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__vector_17>
      48:	0c 94 51 0a 	jmp	0x14a2	; 0x14a2 <__vector_18>
      4c:	0c 94 c0 0a 	jmp	0x1580	; 0x1580 <__vector_19>
      50:	0c 94 2f 0b 	jmp	0x165e	; 0x165e <__vector_20>
      54:	0c 94 9e 0b 	jmp	0x173c	; 0x173c <__vector_21>
      58:	0c 94 0d 0c 	jmp	0x181a	; 0x181a <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	ee ec       	ldi	r30, 0xCE	; 206
      70:	f0 e2       	ldi	r31, 0x20	; 32
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	aa 34       	cpi	r26, 0x4A	; 74
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	aa e4       	ldi	r26, 0x4A	; 74
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a5 3a       	cpi	r26, 0xA5	; 165
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 b7 01 	call	0x36e	; 0x36e <main>
      92:	0c 94 65 10 	jmp	0x20ca	; 0x20ca <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <writeChar>:
}

void printRight(GUI *self, int num) {
	writeChar(self, ((num % 100) / 10), 4); // ï¿½ndra detta till sync sen, sï¿½ den blir lï¿½st
	writeChar(self, (num % 10), 5); // ï¿½ndra detta till sync sen, sï¿½ den blir lï¿½st
}
      9a:	46 30       	cpi	r20, 0x06	; 6
      9c:	51 05       	cpc	r21, r1
      9e:	b8 f5       	brcc	.+110    	; 0x10e <writeChar+0x74>
      a0:	6a 30       	cpi	r22, 0x0A	; 10
      a2:	48 f4       	brcc	.+18     	; 0xb6 <writeChar+0x1c>
      a4:	e6 2f       	mov	r30, r22
      a6:	f0 e0       	ldi	r31, 0x00	; 0
      a8:	ee 0f       	add	r30, r30
      aa:	ff 1f       	adc	r31, r31
      ac:	e0 50       	subi	r30, 0x00	; 0
      ae:	ff 4f       	sbci	r31, 0xFF	; 255
      b0:	60 81       	ld	r22, Z
      b2:	71 81       	ldd	r23, Z+1	; 0x01
      b4:	02 c0       	rjmp	.+4      	; 0xba <writeChar+0x20>
      b6:	60 e0       	ldi	r22, 0x00	; 0
      b8:	70 e0       	ldi	r23, 0x00	; 0
      ba:	40 ff       	sbrs	r20, 0
      bc:	03 c0       	rjmp	.+6      	; 0xc4 <writeChar+0x2a>
      be:	af e0       	ldi	r26, 0x0F	; 15
      c0:	b4 e0       	ldi	r27, 0x04	; 4
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <writeChar+0x2e>
      c4:	a0 ef       	ldi	r26, 0xF0	; 240
      c6:	b0 e0       	ldi	r27, 0x00	; 0
      c8:	55 95       	asr	r21
      ca:	47 95       	ror	r20
      cc:	fa 01       	movw	r30, r20
      ce:	e4 51       	subi	r30, 0x14	; 20
      d0:	ff 4f       	sbci	r31, 0xFF	; 255
      d2:	20 e0       	ldi	r18, 0x00	; 0
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	18 c0       	rjmp	.+48     	; 0x108 <writeChar+0x6e>
      d8:	86 2f       	mov	r24, r22
      da:	8f 70       	andi	r24, 0x0F	; 15
      dc:	90 e0       	ldi	r25, 0x00	; 0
      de:	0b 2e       	mov	r0, r27
      e0:	02 c0       	rjmp	.+4      	; 0xe6 <writeChar+0x4c>
      e2:	88 0f       	add	r24, r24
      e4:	99 1f       	adc	r25, r25
      e6:	0a 94       	dec	r0
      e8:	e2 f7       	brpl	.-8      	; 0xe2 <writeChar+0x48>
      ea:	90 81       	ld	r25, Z
      ec:	9a 23       	and	r25, r26
      ee:	89 2b       	or	r24, r25
      f0:	80 83       	st	Z, r24
      f2:	75 95       	asr	r23
      f4:	67 95       	ror	r22
      f6:	75 95       	asr	r23
      f8:	67 95       	ror	r22
      fa:	75 95       	asr	r23
      fc:	67 95       	ror	r22
      fe:	75 95       	asr	r23
     100:	67 95       	ror	r22
     102:	35 96       	adiw	r30, 0x05	; 5
     104:	2f 5f       	subi	r18, 0xFF	; 255
     106:	3f 4f       	sbci	r19, 0xFF	; 255
     108:	24 30       	cpi	r18, 0x04	; 4
     10a:	31 05       	cpc	r19, r1
     10c:	2c f3       	brlt	.-54     	; 0xd8 <writeChar+0x3e>
     10e:	08 95       	ret

00000110 <printAt>:
     110:	cf 92       	push	r12
     112:	df 92       	push	r13
     114:	ef 92       	push	r14
     116:	ff 92       	push	r15
     118:	0f 93       	push	r16
     11a:	1f 93       	push	r17
     11c:	cf 93       	push	r28
     11e:	df 93       	push	r29
     120:	8c 01       	movw	r16, r24
     122:	fb 01       	movw	r30, r22
     124:	c0 81       	ld	r28, Z
     126:	d1 81       	ldd	r29, Z+1	; 0x01
     128:	c2 80       	ldd	r12, Z+2	; 0x02
     12a:	d3 80       	ldd	r13, Z+3	; 0x03
     12c:	c6 01       	movw	r24, r12
     12e:	64 e6       	ldi	r22, 0x64	; 100
     130:	70 e0       	ldi	r23, 0x00	; 0
     132:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__divmodhi4>
     136:	0f 2e       	mov	r0, r31
     138:	fa e0       	ldi	r31, 0x0A	; 10
     13a:	ef 2e       	mov	r14, r31
     13c:	f1 2c       	mov	r15, r1
     13e:	f0 2d       	mov	r31, r0
     140:	b7 01       	movw	r22, r14
     142:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__divmodhi4>
     146:	ae 01       	movw	r20, r28
     148:	c8 01       	movw	r24, r16
     14a:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
     14e:	21 96       	adiw	r28, 0x01	; 1
     150:	c6 01       	movw	r24, r12
     152:	b7 01       	movw	r22, r14
     154:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__divmodhi4>
     158:	ae 01       	movw	r20, r28
     15a:	68 2f       	mov	r22, r24
     15c:	c8 01       	movw	r24, r16
     15e:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
     162:	df 91       	pop	r29
     164:	cf 91       	pop	r28
     166:	1f 91       	pop	r17
     168:	0f 91       	pop	r16
     16a:	ff 90       	pop	r15
     16c:	ef 90       	pop	r14
     16e:	df 90       	pop	r13
     170:	cf 90       	pop	r12
     172:	08 95       	ret

00000174 <init_program>:

void init_program(GUI *self){
     174:	0f 93       	push	r16
     176:	1f 93       	push	r17
     178:	cf 93       	push	r28
     17a:	df 93       	push	r29
     17c:	cd b7       	in	r28, 0x3d	; 61
     17e:	de b7       	in	r29, 0x3e	; 62
     180:	28 97       	sbiw	r28, 0x08	; 8
     182:	0f b6       	in	r0, 0x3f	; 63
     184:	f8 94       	cli
     186:	de bf       	out	0x3e, r29	; 62
     188:	0f be       	out	0x3f, r0	; 63
     18a:	cd bf       	out	0x3d, r28	; 61
     18c:	8c 01       	movw	r16, r24
	LCDCRA |= 0x80; // LCD enable
     18e:	e4 ee       	ldi	r30, 0xE4	; 228
     190:	f0 e0       	ldi	r31, 0x00	; 0
     192:	80 81       	ld	r24, Z
     194:	80 68       	ori	r24, 0x80	; 128
     196:	80 83       	st	Z, r24
//	LCDCRB = (1<<LCDMUX0)|(1<<LCDMUX1)|(1<<LCDPM2)|(1<<LCDPM1)|(1<<LCDPM0);
	LCDCRB = 0xb7; // 1/3 bias och 1/4 duty, asynk-klockan anvï¿½nds och 25 segment anvï¿½nds
     198:	87 eb       	ldi	r24, 0xB7	; 183
     19a:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	LCDCCR |= 15; // sätter kontrastkontrollen till 3,35 V
     19e:	e7 ee       	ldi	r30, 0xE7	; 231
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	80 81       	ld	r24, Z
     1a4:	8f 60       	ori	r24, 0x0F	; 15
     1a6:	80 83       	st	Z, r24
	LCDFRR = 7;	// sätter prescalern och ger framerate 32 Hz
     1a8:	87 e0       	ldi	r24, 0x07	; 7
     1aa:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	
	PORTB |= (1<<PB7)|(1<<PB6)|(1<<PB4);
     1ae:	85 b1       	in	r24, 0x05	; 5
     1b0:	80 6d       	ori	r24, 0xD0	; 208
     1b2:	85 b9       	out	0x05, r24	; 5
	PORTE |= (1<<PE2)|(1<<PE3);
     1b4:	8e b1       	in	r24, 0x0e	; 14
     1b6:	8c 60       	ori	r24, 0x0C	; 12
     1b8:	8e b9       	out	0x0e, r24	; 14
	DDRB = (1<<DDB5)|(1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
     1ba:	8f e2       	ldi	r24, 0x2F	; 47
     1bc:	84 b9       	out	0x04, r24	; 4
	DDRE = (1<<DDE6)|(1<<DDE4);
     1be:	80 e5       	ldi	r24, 0x50	; 80
     1c0:	8d b9       	out	0x0d, r24	; 13
	
	EIMSK = (1<<PCIE1)|(1<<PCIE0);
     1c2:	80 ec       	ldi	r24, 0xC0	; 192
     1c4:	8d bb       	out	0x1d, r24	; 29
	PCMSK0 = (1<<PCINT3)|(1<<PCINT2);
     1c6:	9c e0       	ldi	r25, 0x0C	; 12
     1c8:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
	PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT12);
     1cc:	90 ed       	ldi	r25, 0xD0	; 208
     1ce:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
//	PCMSK1 = 0x80;
	TCCR1A = 0xC0;
     1d2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7fc080>
	TCCR1B = 0x18;
     1d6:	88 e1       	ldi	r24, 0x18	; 24
     1d8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
	
	CLKPR = 0x80;
     1dc:	e1 e6       	ldi	r30, 0x61	; 97
     1de:	f0 e0       	ldi	r31, 0x00	; 0
     1e0:	80 e8       	ldi	r24, 0x80	; 128
     1e2:	80 83       	st	Z, r24
	CLKPR = 0x00;
     1e4:	10 82       	st	Z, r1
	
	
//	SYNC(self, printRight, 0);
//	SYNC(self, printLeft, 0);
	int argone[2] = {0, 0};
     1e6:	1a 82       	std	Y+2, r1	; 0x02
     1e8:	19 82       	std	Y+1, r1	; 0x01
     1ea:	1c 82       	std	Y+4, r1	; 0x04
     1ec:	1b 82       	std	Y+3, r1	; 0x03
	int argtwo[2] = {4, 0}; 
     1ee:	84 e0       	ldi	r24, 0x04	; 4
     1f0:	90 e0       	ldi	r25, 0x00	; 0
     1f2:	9e 83       	std	Y+6, r25	; 0x06
     1f4:	8d 83       	std	Y+5, r24	; 0x05
     1f6:	18 86       	std	Y+8, r1	; 0x08
     1f8:	1f 82       	std	Y+7, r1	; 0x07
	printAt(self, argone);
     1fa:	be 01       	movw	r22, r28
     1fc:	6f 5f       	subi	r22, 0xFF	; 255
     1fe:	7f 4f       	sbci	r23, 0xFF	; 255
     200:	c8 01       	movw	r24, r16
     202:	0e 94 88 00 	call	0x110	; 0x110 <printAt>
	printAt(self, argtwo);
     206:	be 01       	movw	r22, r28
     208:	6b 5f       	subi	r22, 0xFB	; 251
     20a:	7f 4f       	sbci	r23, 0xFF	; 255
     20c:	c8 01       	movw	r24, r16
     20e:	0e 94 88 00 	call	0x110	; 0x110 <printAt>
//	printLeft(self, 0);
//	printRight(self, 0);
	LCDDR0 |= 0x40;
     212:	ec ee       	ldi	r30, 0xEC	; 236
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	80 81       	ld	r24, Z
     218:	80 64       	ori	r24, 0x40	; 64
     21a:	80 83       	st	Z, r24
     21c:	28 96       	adiw	r28, 0x08	; 8
     21e:	0f b6       	in	r0, 0x3f	; 63
     220:	f8 94       	cli
     222:	de bf       	out	0x3e, r29	; 62
     224:	0f be       	out	0x3f, r0	; 63
     226:	cd bf       	out	0x3d, r28	; 61
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	1f 91       	pop	r17
     22e:	0f 91       	pop	r16
     230:	08 95       	ret

00000232 <initialize>:
#include "Statechanger.h"
#include "TinyTimber.h"
#include "Pulsegenerator.h"
#include <avr/io.h>

void initialize(Inputs *self){
     232:	cf 92       	push	r12
     234:	df 92       	push	r13
     236:	ef 92       	push	r14
     238:	ff 92       	push	r15
     23a:	0f 93       	push	r16
     23c:	1f 93       	push	r17
     23e:	cf 93       	push	r28
     240:	df 93       	push	r29
     242:	ec 01       	movw	r28, r24
	ASYNC(self->left, Pulse, 0);
     244:	0c 81       	ldd	r16, Y+4	; 0x04
     246:	1d 81       	ldd	r17, Y+5	; 0x05
     248:	c1 2c       	mov	r12, r1
     24a:	d1 2c       	mov	r13, r1
     24c:	0f 2e       	mov	r0, r31
     24e:	f2 ed       	ldi	r31, 0xD2	; 210
     250:	ef 2e       	mov	r14, r31
     252:	f1 e0       	ldi	r31, 0x01	; 1
     254:	ff 2e       	mov	r15, r31
     256:	f0 2d       	mov	r31, r0
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	a9 01       	movw	r20, r18
     25e:	60 e0       	ldi	r22, 0x00	; 0
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	cb 01       	movw	r24, r22
     264:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
	ASYNC(self->right, Pulse, 0);
     268:	0e 81       	ldd	r16, Y+6	; 0x06
     26a:	1f 81       	ldd	r17, Y+7	; 0x07
     26c:	20 e0       	ldi	r18, 0x00	; 0
     26e:	30 e0       	ldi	r19, 0x00	; 0
     270:	a9 01       	movw	r20, r18
     272:	60 e0       	ldi	r22, 0x00	; 0
     274:	70 e0       	ldi	r23, 0x00	; 0
     276:	cb 01       	movw	r24, r22
     278:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
}
     27c:	df 91       	pop	r29
     27e:	cf 91       	pop	r28
     280:	1f 91       	pop	r17
     282:	0f 91       	pop	r16
     284:	ff 90       	pop	r15
     286:	ef 90       	pop	r14
     288:	df 90       	pop	r13
     28a:	cf 90       	pop	r12
     28c:	08 95       	ret

0000028e <checkInputs>:

void checkInputs(Inputs *self){
     28e:	cf 92       	push	r12
     290:	df 92       	push	r13
     292:	ef 92       	push	r14
     294:	ff 92       	push	r15
     296:	0f 93       	push	r16
     298:	1f 93       	push	r17
     29a:	cf 93       	push	r28
     29c:	df 93       	push	r29
     29e:	ec 01       	movw	r28, r24
	if((PINB&0x80)==0){ // nedtryckt
     2a0:	1f 99       	sbic	0x03, 7	; 3
     2a2:	12 c0       	rjmp	.+36     	; 0x2c8 <checkInputs+0x3a>
		ASYNC(self->current, decrease, 0);
     2a4:	08 85       	ldd	r16, Y+8	; 0x08
     2a6:	19 85       	ldd	r17, Y+9	; 0x09
     2a8:	c1 2c       	mov	r12, r1
     2aa:	d1 2c       	mov	r13, r1
     2ac:	0f 2e       	mov	r0, r31
     2ae:	f9 e9       	ldi	r31, 0x99	; 153
     2b0:	ef 2e       	mov	r14, r31
     2b2:	f2 e0       	ldi	r31, 0x02	; 2
     2b4:	ff 2e       	mov	r15, r31
     2b6:	f0 2d       	mov	r31, r0
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	a9 01       	movw	r20, r18
     2be:	60 e0       	ldi	r22, 0x00	; 0
     2c0:	70 e0       	ldi	r23, 0x00	; 0
     2c2:	cb 01       	movw	r24, r22
     2c4:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
//		AFTER(MSEC(450), self->coup, decreaseCurrent, 0);
//		ASYNC(self->coup, decreaseCurrent, 0);
	}
	if((PINB&0x40)==0){
     2c8:	1e 99       	sbic	0x03, 6	; 3
     2ca:	12 c0       	rjmp	.+36     	; 0x2f0 <checkInputs+0x62>
		ASYNC(self->current, increase, 0);
     2cc:	08 85       	ldd	r16, Y+8	; 0x08
     2ce:	19 85       	ldd	r17, Y+9	; 0x09
     2d0:	c1 2c       	mov	r12, r1
     2d2:	d1 2c       	mov	r13, r1
     2d4:	0f 2e       	mov	r0, r31
     2d6:	fb e4       	ldi	r31, 0x4B	; 75
     2d8:	ef 2e       	mov	r14, r31
     2da:	f2 e0       	ldi	r31, 0x02	; 2
     2dc:	ff 2e       	mov	r15, r31
     2de:	f0 2d       	mov	r31, r0
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	a9 01       	movw	r20, r18
     2e6:	60 e0       	ldi	r22, 0x00	; 0
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	cb 01       	movw	r24, r22
     2ec:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
//		AFTER(MSEC(450), self->coup, increaseCurrent, 0);
//		ASYNC(self->coup, increaseCurrent, 0);
	}
	if((PINB&0x10)==0){
     2f0:	1c 99       	sbic	0x03, 4	; 3
     2f2:	12 c0       	rjmp	.+36     	; 0x318 <checkInputs+0x8a>
		ASYNC(self->current, save, 0);
     2f4:	08 85       	ldd	r16, Y+8	; 0x08
     2f6:	19 85       	ldd	r17, Y+9	; 0x09
     2f8:	c1 2c       	mov	r12, r1
     2fa:	d1 2c       	mov	r13, r1
     2fc:	0f 2e       	mov	r0, r31
     2fe:	f5 ee       	ldi	r31, 0xE5	; 229
     300:	ef 2e       	mov	r14, r31
     302:	f2 e0       	ldi	r31, 0x02	; 2
     304:	ff 2e       	mov	r15, r31
     306:	f0 2d       	mov	r31, r0
     308:	20 e0       	ldi	r18, 0x00	; 0
     30a:	30 e0       	ldi	r19, 0x00	; 0
     30c:	a9 01       	movw	r20, r18
     30e:	60 e0       	ldi	r22, 0x00	; 0
     310:	70 e0       	ldi	r23, 0x00	; 0
     312:	cb 01       	movw	r24, r22
     314:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
	}
	// lägg till kod för nedtryckning sen
}
     318:	df 91       	pop	r29
     31a:	cf 91       	pop	r28
     31c:	1f 91       	pop	r17
     31e:	0f 91       	pop	r16
     320:	ff 90       	pop	r15
     322:	ef 90       	pop	r14
     324:	df 90       	pop	r13
     326:	cf 90       	pop	r12
     328:	08 95       	ret

0000032a <checkSideways>:

void checkSideways(Inputs *self){
     32a:	fc 01       	movw	r30, r24
	// anropa changecurrent
	if((PINE&0x04)==0){
     32c:	62 99       	sbic	0x0c, 2	; 12
     32e:	0e c0       	rjmp	.+28     	; 0x34c <checkSideways+0x22>
		self->current = self->left;
     330:	84 81       	ldd	r24, Z+4	; 0x04
     332:	95 81       	ldd	r25, Z+5	; 0x05
     334:	91 87       	std	Z+9, r25	; 0x09
     336:	80 87       	std	Z+8, r24	; 0x08
		LCDDR1 &= 0x9F;
     338:	ad ee       	ldi	r26, 0xED	; 237
     33a:	b0 e0       	ldi	r27, 0x00	; 0
     33c:	8c 91       	ld	r24, X
     33e:	8f 79       	andi	r24, 0x9F	; 159
     340:	8c 93       	st	X, r24
		LCDDR0 |= 0x40;
     342:	ac ee       	ldi	r26, 0xEC	; 236
     344:	b0 e0       	ldi	r27, 0x00	; 0
     346:	8c 91       	ld	r24, X
     348:	80 64       	ori	r24, 0x40	; 64
     34a:	8c 93       	st	X, r24
	
	}
	if((PINE&0x08)==0){
     34c:	63 99       	sbic	0x0c, 3	; 12
     34e:	0e c0       	rjmp	.+28     	; 0x36c <checkSideways+0x42>
		self->current = self->right;
     350:	86 81       	ldd	r24, Z+6	; 0x06
     352:	97 81       	ldd	r25, Z+7	; 0x07
     354:	91 87       	std	Z+9, r25	; 0x09
     356:	80 87       	std	Z+8, r24	; 0x08
		LCDDR0 &= 0x9F;
     358:	ec ee       	ldi	r30, 0xEC	; 236
     35a:	f0 e0       	ldi	r31, 0x00	; 0
     35c:	80 81       	ld	r24, Z
     35e:	8f 79       	andi	r24, 0x9F	; 159
     360:	80 83       	st	Z, r24
		LCDDR1 |= 0x20;
     362:	ed ee       	ldi	r30, 0xED	; 237
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	80 81       	ld	r24, Z
     368:	80 62       	ori	r24, 0x20	; 32
     36a:	80 83       	st	Z, r24
     36c:	08 95       	ret

0000036e <main>:
Inputs handler = initInputs(&left, &right);


int main(void)
{
	init_program(&ui);
     36e:	8e e4       	ldi	r24, 0x4E	; 78
     370:	91 e0       	ldi	r25, 0x01	; 1
     372:	0e 94 ba 00 	call	0x174	; 0x174 <init_program>
//	increase(&right, 0);
//	increase(&left, 0);
//	increase(&left, 0);
//	increase(&left, 0);
	INSTALL(&handler, checkInputs, IRQ_PCINT1);
     376:	42 e0       	ldi	r20, 0x02	; 2
     378:	67 e4       	ldi	r22, 0x47	; 71
     37a:	71 e0       	ldi	r23, 0x01	; 1
     37c:	84 e1       	ldi	r24, 0x14	; 20
     37e:	91 e0       	ldi	r25, 0x01	; 1
     380:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <install>
	INSTALL(&handler, checkSideways, IRQ_PCINT0);
     384:	41 e0       	ldi	r20, 0x01	; 1
     386:	65 e9       	ldi	r22, 0x95	; 149
     388:	71 e0       	ldi	r23, 0x01	; 1
     38a:	84 e1       	ldi	r24, 0x14	; 20
     38c:	91 e0       	ldi	r25, 0x01	; 1
     38e:	0e 94 58 0f 	call	0x1eb0	; 0x1eb0 <install>
//	startup(&coupdetat, 0);
//	tinytimber(&left, Pulse, 0);
//	tinytimber(&right, Pulse, 0);
//	tinytimber(&coupdetat, startup, 0);
//	tinytimber(&ui, init_program, 0);
	tinytimber(&handler, initialize, NULL);
     392:	40 e0       	ldi	r20, 0x00	; 0
     394:	50 e0       	ldi	r21, 0x00	; 0
     396:	69 e1       	ldi	r22, 0x19	; 25
     398:	71 e0       	ldi	r23, 0x01	; 1
     39a:	84 e1       	ldi	r24, 0x14	; 20
     39c:	91 e0       	ldi	r25, 0x01	; 1
     39e:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <tinytimber>
     3a2:	ff cf       	rjmp	.-2      	; 0x3a2 <main+0x34>

000003a4 <Pulse>:
#include "GUI.h"
#include "Writer.h"

#include <avr/interrupt.h>

void Pulse(Pulsegenerator *self, int num){
     3a4:	cf 92       	push	r12
     3a6:	df 92       	push	r13
     3a8:	ef 92       	push	r14
     3aa:	ff 92       	push	r15
     3ac:	0f 93       	push	r16
     3ae:	1f 93       	push	r17
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	ec 01       	movw	r28, r24
	if(self->frequence <= 0){
     3b6:	8e 81       	ldd	r24, Y+6	; 0x06
     3b8:	9f 81       	ldd	r25, Y+7	; 0x07
     3ba:	18 16       	cp	r1, r24
     3bc:	19 06       	cpc	r1, r25
     3be:	ec f0       	brlt	.+58     	; 0x3fa <Pulse+0x56>
		AFTER(SEC(1), self, Pulse, NULL);
     3c0:	c1 2c       	mov	r12, r1
     3c2:	d1 2c       	mov	r13, r1
     3c4:	0f 2e       	mov	r0, r31
     3c6:	f2 ed       	ldi	r31, 0xD2	; 210
     3c8:	ef 2e       	mov	r14, r31
     3ca:	f1 e0       	ldi	r31, 0x01	; 1
     3cc:	ff 2e       	mov	r15, r31
     3ce:	f0 2d       	mov	r31, r0
     3d0:	8e 01       	movw	r16, r28
     3d2:	20 e0       	ldi	r18, 0x00	; 0
     3d4:	30 e0       	ldi	r19, 0x00	; 0
     3d6:	a9 01       	movw	r20, r18
     3d8:	62 e1       	ldi	r22, 0x12	; 18
     3da:	7a e7       	ldi	r23, 0x7A	; 122
     3dc:	80 e0       	ldi	r24, 0x00	; 0
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
		SYNC(self->shakespear, writeLowToPort, self->bitnr);
     3e4:	4a 85       	ldd	r20, Y+10	; 0x0a
     3e6:	5b 85       	ldd	r21, Y+11	; 0x0b
     3e8:	65 e9       	ldi	r22, 0x95	; 149
     3ea:	7f e0       	ldi	r23, 0x0F	; 15
     3ec:	8e 85       	ldd	r24, Y+14	; 0x0e
     3ee:	9f 85       	ldd	r25, Y+15	; 0x0f
     3f0:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
		self->boo = 0;
     3f4:	1d 86       	std	Y+13, r1	; 0x0d
     3f6:	1c 86       	std	Y+12, r1	; 0x0c
     3f8:	45 c0       	rjmp	.+138    	; 0x484 <__DATA_REGION_LENGTH__+0x84>
	}else{
		if(self->boo)
     3fa:	8c 85       	ldd	r24, Y+12	; 0x0c
     3fc:	9d 85       	ldd	r25, Y+13	; 0x0d
     3fe:	89 2b       	or	r24, r25
     400:	49 f0       	breq	.+18     	; 0x414 <__DATA_REGION_LENGTH__+0x14>
		{
			SYNC(self->shakespear, writeHighToPort, self->bitnr);
     402:	4a 85       	ldd	r20, Y+10	; 0x0a
     404:	5b 85       	ldd	r21, Y+11	; 0x0b
     406:	6a e8       	ldi	r22, 0x8A	; 138
     408:	7f e0       	ldi	r23, 0x0F	; 15
     40a:	8e 85       	ldd	r24, Y+14	; 0x0e
     40c:	9f 85       	ldd	r25, Y+15	; 0x0f
     40e:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
     412:	08 c0       	rjmp	.+16     	; 0x424 <__DATA_REGION_LENGTH__+0x24>
		}else{
			SYNC(self->shakespear, writeLowToPort, self->bitnr);
     414:	4a 85       	ldd	r20, Y+10	; 0x0a
     416:	5b 85       	ldd	r21, Y+11	; 0x0b
     418:	65 e9       	ldi	r22, 0x95	; 149
     41a:	7f e0       	ldi	r23, 0x0F	; 15
     41c:	8e 85       	ldd	r24, Y+14	; 0x0e
     41e:	9f 85       	ldd	r25, Y+15	; 0x0f
     420:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
		}
		AFTER(USEC(500000/self->frequence), self, Pulse, NULL);
     424:	2e 81       	ldd	r18, Y+6	; 0x06
     426:	3f 81       	ldd	r19, Y+7	; 0x07
     428:	03 2e       	mov	r0, r19
     42a:	00 0c       	add	r0, r0
     42c:	44 0b       	sbc	r20, r20
     42e:	55 0b       	sbc	r21, r21
     430:	60 e2       	ldi	r22, 0x20	; 32
     432:	71 ea       	ldi	r23, 0xA1	; 161
     434:	87 e0       	ldi	r24, 0x07	; 7
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <__divmodsi4>
     43c:	ad e7       	ldi	r26, 0x7D	; 125
     43e:	b0 e0       	ldi	r27, 0x00	; 0
     440:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <__muluhisi3>
     444:	20 ea       	ldi	r18, 0xA0	; 160
     446:	3f e0       	ldi	r19, 0x0F	; 15
     448:	40 e0       	ldi	r20, 0x00	; 0
     44a:	50 e0       	ldi	r21, 0x00	; 0
     44c:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <__divmodsi4>
     450:	ca 01       	movw	r24, r20
     452:	b9 01       	movw	r22, r18
     454:	c1 2c       	mov	r12, r1
     456:	d1 2c       	mov	r13, r1
     458:	0f 2e       	mov	r0, r31
     45a:	f2 ed       	ldi	r31, 0xD2	; 210
     45c:	ef 2e       	mov	r14, r31
     45e:	f1 e0       	ldi	r31, 0x01	; 1
     460:	ff 2e       	mov	r15, r31
     462:	f0 2d       	mov	r31, r0
     464:	8e 01       	movw	r16, r28
     466:	20 e0       	ldi	r18, 0x00	; 0
     468:	30 e0       	ldi	r19, 0x00	; 0
     46a:	a9 01       	movw	r20, r18
     46c:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
		self->boo = !(self->boo);
     470:	2c 85       	ldd	r18, Y+12	; 0x0c
     472:	3d 85       	ldd	r19, Y+13	; 0x0d
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	23 2b       	or	r18, r19
     47a:	11 f0       	breq	.+4      	; 0x480 <__DATA_REGION_LENGTH__+0x80>
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	9d 87       	std	Y+13, r25	; 0x0d
     482:	8c 87       	std	Y+12, r24	; 0x0c
		//AFTER(SEC(1), self, Pulse, num);
	}
	
}
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	1f 91       	pop	r17
     48a:	0f 91       	pop	r16
     48c:	ff 90       	pop	r15
     48e:	ef 90       	pop	r14
     490:	df 90       	pop	r13
     492:	cf 90       	pop	r12
     494:	08 95       	ret

00000496 <increase>:

void increase(Pulsegenerator *self, int num){
     496:	cf 92       	push	r12
     498:	df 92       	push	r13
     49a:	ef 92       	push	r14
     49c:	ff 92       	push	r15
     49e:	0f 93       	push	r16
     4a0:	1f 93       	push	r17
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	00 d0       	rcall	.+0      	; 0x4a8 <increase+0x12>
     4a8:	00 d0       	rcall	.+0      	; 0x4aa <increase+0x14>
     4aa:	cd b7       	in	r28, 0x3d	; 61
     4ac:	de b7       	in	r29, 0x3e	; 62
     4ae:	8c 01       	movw	r16, r24
	
	if(self->frequence < 99){
     4b0:	fc 01       	movw	r30, r24
     4b2:	86 81       	ldd	r24, Z+6	; 0x06
     4b4:	97 81       	ldd	r25, Z+7	; 0x07
     4b6:	83 36       	cpi	r24, 0x63	; 99
     4b8:	91 05       	cpc	r25, r1
     4ba:	24 f4       	brge	.+8      	; 0x4c4 <increase+0x2e>
		self->frequence +=1;
     4bc:	01 96       	adiw	r24, 0x01	; 1
     4be:	97 83       	std	Z+7, r25	; 0x07
     4c0:	86 83       	std	Z+6, r24	; 0x06
     4c2:	05 c0       	rjmp	.+10     	; 0x4ce <increase+0x38>
	}else{
		self->frequence = 99;
     4c4:	83 e6       	ldi	r24, 0x63	; 99
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	f8 01       	movw	r30, r16
     4ca:	97 83       	std	Z+7, r25	; 0x07
     4cc:	86 83       	std	Z+6, r24	; 0x06
	}
	int args[2] = {self->pos, self->frequence};
     4ce:	f8 01       	movw	r30, r16
     4d0:	84 81       	ldd	r24, Z+4	; 0x04
     4d2:	95 81       	ldd	r25, Z+5	; 0x05
     4d4:	9a 83       	std	Y+2, r25	; 0x02
     4d6:	89 83       	std	Y+1, r24	; 0x01
     4d8:	86 81       	ldd	r24, Z+6	; 0x06
     4da:	97 81       	ldd	r25, Z+7	; 0x07
     4dc:	9c 83       	std	Y+4, r25	; 0x04
     4de:	8b 83       	std	Y+3, r24	; 0x03
	SYNC(self->ui, printAt, args);
     4e0:	ae 01       	movw	r20, r28
     4e2:	4f 5f       	subi	r20, 0xFF	; 255
     4e4:	5f 4f       	sbci	r21, 0xFF	; 255
     4e6:	68 e8       	ldi	r22, 0x88	; 136
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	80 89       	ldd	r24, Z+16	; 0x10
     4ec:	91 89       	ldd	r25, Z+17	; 0x11
     4ee:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
		SYNC(self->ui, printRight, self->frequence);
	}*/
	//increase(self->current, num);
	//ASYNC(&(self->ui), printAt, (&(self->ui), self->current->frequence, self->current->pos));
	//printAt(&(self->ui), self->current->frequence, current->pos);
	if((PINB&0x40)==0){
     4f2:	1e 99       	sbic	0x03, 6	; 3
     4f4:	11 c0       	rjmp	.+34     	; 0x518 <__stack+0x19>
		AFTER(MSEC(100), self, increase, 0);
     4f6:	c1 2c       	mov	r12, r1
     4f8:	d1 2c       	mov	r13, r1
     4fa:	0f 2e       	mov	r0, r31
     4fc:	fb e4       	ldi	r31, 0x4B	; 75
     4fe:	ef 2e       	mov	r14, r31
     500:	f2 e0       	ldi	r31, 0x02	; 2
     502:	ff 2e       	mov	r15, r31
     504:	f0 2d       	mov	r31, r0
     506:	20 e0       	ldi	r18, 0x00	; 0
     508:	30 e0       	ldi	r19, 0x00	; 0
     50a:	a9 01       	movw	r20, r18
     50c:	65 e3       	ldi	r22, 0x35	; 53
     50e:	7c e0       	ldi	r23, 0x0C	; 12
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
	}
}
     518:	0f 90       	pop	r0
     51a:	0f 90       	pop	r0
     51c:	0f 90       	pop	r0
     51e:	0f 90       	pop	r0
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	1f 91       	pop	r17
     526:	0f 91       	pop	r16
     528:	ff 90       	pop	r15
     52a:	ef 90       	pop	r14
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	08 95       	ret

00000532 <decrease>:

void decrease(Pulsegenerator *self, int num){
     532:	cf 92       	push	r12
     534:	df 92       	push	r13
     536:	ef 92       	push	r14
     538:	ff 92       	push	r15
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
     542:	00 d0       	rcall	.+0      	; 0x544 <decrease+0x12>
     544:	00 d0       	rcall	.+0      	; 0x546 <decrease+0x14>
     546:	cd b7       	in	r28, 0x3d	; 61
     548:	de b7       	in	r29, 0x3e	; 62
     54a:	8c 01       	movw	r16, r24
	if(self->frequence > 0){
     54c:	fc 01       	movw	r30, r24
     54e:	86 81       	ldd	r24, Z+6	; 0x06
     550:	97 81       	ldd	r25, Z+7	; 0x07
     552:	18 16       	cp	r1, r24
     554:	19 06       	cpc	r1, r25
     556:	24 f4       	brge	.+8      	; 0x560 <decrease+0x2e>
		self->frequence -= 1;
     558:	01 97       	sbiw	r24, 0x01	; 1
     55a:	97 83       	std	Z+7, r25	; 0x07
     55c:	86 83       	std	Z+6, r24	; 0x06
     55e:	03 c0       	rjmp	.+6      	; 0x566 <decrease+0x34>
	}else{
		self->frequence = 0;
     560:	f8 01       	movw	r30, r16
     562:	17 82       	std	Z+7, r1	; 0x07
     564:	16 82       	std	Z+6, r1	; 0x06
	}
	int args[2] = {self->pos, self->frequence};
     566:	f8 01       	movw	r30, r16
     568:	84 81       	ldd	r24, Z+4	; 0x04
     56a:	95 81       	ldd	r25, Z+5	; 0x05
     56c:	9a 83       	std	Y+2, r25	; 0x02
     56e:	89 83       	std	Y+1, r24	; 0x01
     570:	86 81       	ldd	r24, Z+6	; 0x06
     572:	97 81       	ldd	r25, Z+7	; 0x07
     574:	9c 83       	std	Y+4, r25	; 0x04
     576:	8b 83       	std	Y+3, r24	; 0x03
	SYNC(self->ui, printAt, args);
     578:	ae 01       	movw	r20, r28
     57a:	4f 5f       	subi	r20, 0xFF	; 255
     57c:	5f 4f       	sbci	r21, 0xFF	; 255
     57e:	68 e8       	ldi	r22, 0x88	; 136
     580:	70 e0       	ldi	r23, 0x00	; 0
     582:	80 89       	ldd	r24, Z+16	; 0x10
     584:	91 89       	ldd	r25, Z+17	; 0x11
     586:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
		SYNC(self->ui, printRight, self->frequence);
	}*/
	//increase(self->current, num);
	//ASYNC(&(self->ui), printAt, (&(self->ui), self->current->frequence, self->current->pos));
	//printAt(&(self->ui), self->current->frequence, current->pos);
	if((PINB&0x80)==0){
     58a:	1f 99       	sbic	0x03, 7	; 3
     58c:	11 c0       	rjmp	.+34     	; 0x5b0 <decrease+0x7e>
		AFTER(MSEC(100), self,decrease, 0);
     58e:	c1 2c       	mov	r12, r1
     590:	d1 2c       	mov	r13, r1
     592:	0f 2e       	mov	r0, r31
     594:	f9 e9       	ldi	r31, 0x99	; 153
     596:	ef 2e       	mov	r14, r31
     598:	f2 e0       	ldi	r31, 0x02	; 2
     59a:	ff 2e       	mov	r15, r31
     59c:	f0 2d       	mov	r31, r0
     59e:	20 e0       	ldi	r18, 0x00	; 0
     5a0:	30 e0       	ldi	r19, 0x00	; 0
     5a2:	a9 01       	movw	r20, r18
     5a4:	65 e3       	ldi	r22, 0x35	; 53
     5a6:	7c e0       	ldi	r23, 0x0C	; 12
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
	}
}
     5b0:	0f 90       	pop	r0
     5b2:	0f 90       	pop	r0
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	df 91       	pop	r29
     5ba:	cf 91       	pop	r28
     5bc:	1f 91       	pop	r17
     5be:	0f 91       	pop	r16
     5c0:	ff 90       	pop	r15
     5c2:	ef 90       	pop	r14
     5c4:	df 90       	pop	r13
     5c6:	cf 90       	pop	r12
     5c8:	08 95       	ret

000005ca <save>:

void save(Pulsegenerator *self, int num){
     5ca:	0f 93       	push	r16
     5cc:	1f 93       	push	r17
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	00 d0       	rcall	.+0      	; 0x5d4 <save+0xa>
     5d4:	00 d0       	rcall	.+0      	; 0x5d6 <save+0xc>
     5d6:	cd b7       	in	r28, 0x3d	; 61
     5d8:	de b7       	in	r29, 0x3e	; 62
     5da:	8c 01       	movw	r16, r24
	if(self->frequence>0){
     5dc:	fc 01       	movw	r30, r24
     5de:	86 81       	ldd	r24, Z+6	; 0x06
     5e0:	97 81       	ldd	r25, Z+7	; 0x07
     5e2:	18 16       	cp	r1, r24
     5e4:	19 06       	cpc	r1, r25
     5e6:	84 f4       	brge	.+32     	; 0x608 <save+0x3e>
		self->saved = self->frequence;
     5e8:	91 87       	std	Z+9, r25	; 0x09
     5ea:	80 87       	std	Z+8, r24	; 0x08
		self->frequence = 0;
     5ec:	17 82       	std	Z+7, r1	; 0x07
     5ee:	16 82       	std	Z+6, r1	; 0x06
		SYNC(self->shakespear, writeLowToPort, self->bitnr);
     5f0:	42 85       	ldd	r20, Z+10	; 0x0a
     5f2:	53 85       	ldd	r21, Z+11	; 0x0b
     5f4:	65 e9       	ldi	r22, 0x95	; 149
     5f6:	7f e0       	ldi	r23, 0x0F	; 15
     5f8:	86 85       	ldd	r24, Z+14	; 0x0e
     5fa:	97 85       	ldd	r25, Z+15	; 0x0f
     5fc:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
		self->boo = 0;
     600:	f8 01       	movw	r30, r16
     602:	15 86       	std	Z+13, r1	; 0x0d
     604:	14 86       	std	Z+12, r1	; 0x0c
     606:	05 c0       	rjmp	.+10     	; 0x612 <save+0x48>
	}else{
		self->frequence = self->saved;
     608:	f8 01       	movw	r30, r16
     60a:	80 85       	ldd	r24, Z+8	; 0x08
     60c:	91 85       	ldd	r25, Z+9	; 0x09
     60e:	97 83       	std	Z+7, r25	; 0x07
     610:	86 83       	std	Z+6, r24	; 0x06
	}
	int args[2] = {self->pos, self->frequence};
     612:	f8 01       	movw	r30, r16
     614:	84 81       	ldd	r24, Z+4	; 0x04
     616:	95 81       	ldd	r25, Z+5	; 0x05
     618:	9a 83       	std	Y+2, r25	; 0x02
     61a:	89 83       	std	Y+1, r24	; 0x01
     61c:	86 81       	ldd	r24, Z+6	; 0x06
     61e:	97 81       	ldd	r25, Z+7	; 0x07
     620:	9c 83       	std	Y+4, r25	; 0x04
     622:	8b 83       	std	Y+3, r24	; 0x03
	SYNC(self->ui, printAt, args);
     624:	ae 01       	movw	r20, r28
     626:	4f 5f       	subi	r20, 0xFF	; 255
     628:	5f 4f       	sbci	r21, 0xFF	; 255
     62a:	68 e8       	ldi	r22, 0x88	; 136
     62c:	70 e0       	ldi	r23, 0x00	; 0
     62e:	80 89       	ldd	r24, Z+16	; 0x10
     630:	91 89       	ldd	r25, Z+17	; 0x11
     632:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
	/*if(self->pos == 0){
		SYNC(self->ui, printLeft, self->frequence);
	}else{
		SYNC(self->ui, printRight, self->frequence);
	}*/
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	df 91       	pop	r29
     640:	cf 91       	pop	r28
     642:	1f 91       	pop	r17
     644:	0f 91       	pop	r16
     646:	08 95       	ret

00000648 <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	00 d0       	rcall	.+0      	; 0x64e <initialize+0x6>
     64e:	00 d0       	rcall	.+0      	; 0x650 <initialize+0x8>
     650:	cd b7       	in	r28, 0x3d	; 61
     652:	de b7       	in	r29, 0x3e	; 62
     654:	80 e0       	ldi	r24, 0x00	; 0
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	18 c0       	rjmp	.+48     	; 0x68a <initialize+0x42>
     65a:	ac 01       	movw	r20, r24
     65c:	4f 5f       	subi	r20, 0xFF	; 255
     65e:	5f 4f       	sbci	r21, 0xFF	; 255
     660:	9a 01       	movw	r18, r20
     662:	22 95       	swap	r18
     664:	32 95       	swap	r19
     666:	30 7f       	andi	r19, 0xF0	; 240
     668:	32 27       	eor	r19, r18
     66a:	20 7f       	andi	r18, 0xF0	; 240
     66c:	32 27       	eor	r19, r18
     66e:	2b 5c       	subi	r18, 0xCB	; 203
     670:	3d 4f       	sbci	r19, 0xFD	; 253
     672:	82 95       	swap	r24
     674:	92 95       	swap	r25
     676:	90 7f       	andi	r25, 0xF0	; 240
     678:	98 27       	eor	r25, r24
     67a:	80 7f       	andi	r24, 0xF0	; 240
     67c:	98 27       	eor	r25, r24
     67e:	fc 01       	movw	r30, r24
     680:	eb 5c       	subi	r30, 0xCB	; 203
     682:	fd 4f       	sbci	r31, 0xFD	; 253
     684:	31 83       	std	Z+1, r19	; 0x01
     686:	20 83       	st	Z, r18
     688:	ca 01       	movw	r24, r20
     68a:	8e 30       	cpi	r24, 0x0E	; 14
     68c:	91 05       	cpc	r25, r1
     68e:	2c f3       	brlt	.-54     	; 0x65a <initialize+0x12>
     690:	10 92 16 03 	sts	0x0316, r1	; 0x800316 <messages+0xe1>
     694:	10 92 15 03 	sts	0x0315, r1	; 0x800315 <messages+0xe0>
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	90 e0       	ldi	r25, 0x00	; 0
     69c:	15 c0       	rjmp	.+42     	; 0x6c8 <initialize+0x80>
     69e:	ac 01       	movw	r20, r24
     6a0:	4f 5f       	subi	r20, 0xFF	; 255
     6a2:	5f 4f       	sbci	r21, 0xFF	; 255
     6a4:	6d e1       	ldi	r22, 0x1D	; 29
     6a6:	64 9f       	mul	r22, r20
     6a8:	90 01       	movw	r18, r0
     6aa:	65 9f       	mul	r22, r21
     6ac:	30 0d       	add	r19, r0
     6ae:	11 24       	eor	r1, r1
     6b0:	20 58       	subi	r18, 0x80	; 128
     6b2:	3e 4f       	sbci	r19, 0xFE	; 254
     6b4:	68 9f       	mul	r22, r24
     6b6:	f0 01       	movw	r30, r0
     6b8:	69 9f       	mul	r22, r25
     6ba:	f0 0d       	add	r31, r0
     6bc:	11 24       	eor	r1, r1
     6be:	e0 58       	subi	r30, 0x80	; 128
     6c0:	fe 4f       	sbci	r31, 0xFE	; 254
     6c2:	31 83       	std	Z+1, r19	; 0x01
     6c4:	20 83       	st	Z, r18
     6c6:	ca 01       	movw	r24, r20
     6c8:	83 30       	cpi	r24, 0x03	; 3
     6ca:	91 05       	cpc	r25, r1
     6cc:	44 f3       	brlt	.-48     	; 0x69e <initialize+0x56>
     6ce:	10 92 d8 01 	sts	0x01D8, r1	; 0x8001d8 <threads+0x58>
     6d2:	10 92 d7 01 	sts	0x01D7, r1	; 0x8001d7 <threads+0x57>
     6d6:	1a 82       	std	Y+2, r1	; 0x02
     6d8:	19 82       	std	Y+1, r1	; 0x01
     6da:	32 c0       	rjmp	.+100    	; 0x740 <initialize+0xf8>
     6dc:	2d e1       	ldi	r18, 0x1D	; 29
     6de:	49 81       	ldd	r20, Y+1	; 0x01
     6e0:	5a 81       	ldd	r21, Y+2	; 0x02
     6e2:	24 9f       	mul	r18, r20
     6e4:	c0 01       	movw	r24, r0
     6e6:	25 9f       	mul	r18, r21
     6e8:	90 0d       	add	r25, r0
     6ea:	11 24       	eor	r1, r1
     6ec:	fc 01       	movw	r30, r24
     6ee:	ea 57       	subi	r30, 0x7A	; 122
     6f0:	fe 4f       	sbci	r31, 0xFE	; 254
     6f2:	fc 83       	std	Y+4, r31	; 0x04
     6f4:	eb 83       	std	Y+3, r30	; 0x03
     6f6:	cf 01       	movw	r24, r30
     6f8:	0e 94 24 10 	call	0x2048	; 0x2048 <setjmp>
     6fc:	20 e6       	ldi	r18, 0x60	; 96
     6fe:	49 81       	ldd	r20, Y+1	; 0x01
     700:	5a 81       	ldd	r21, Y+2	; 0x02
     702:	24 9f       	mul	r18, r20
     704:	c0 01       	movw	r24, r0
     706:	25 9f       	mul	r18, r21
     708:	90 0d       	add	r25, r0
     70a:	11 24       	eor	r1, r1
     70c:	8f 57       	subi	r24, 0x7F	; 127
     70e:	9c 4f       	sbci	r25, 0xFC	; 252
     710:	eb 81       	ldd	r30, Y+3	; 0x03
     712:	fc 81       	ldd	r31, Y+4	; 0x04
     714:	91 8b       	std	Z+17, r25	; 0x11
     716:	80 8b       	std	Z+16, r24	; 0x10
     718:	93 8b       	std	Z+19, r25	; 0x13
     71a:	82 8b       	std	Z+18, r24	; 0x12
     71c:	80 e0       	ldi	r24, 0x00	; 0
     71e:	9f e0       	ldi	r25, 0x0F	; 15
     720:	96 8b       	std	Z+22, r25	; 0x16
     722:	85 8b       	std	Z+21, r24	; 0x15
     724:	8d e1       	ldi	r24, 0x1D	; 29
     726:	84 9f       	mul	r24, r20
     728:	f0 01       	movw	r30, r0
     72a:	85 9f       	mul	r24, r21
     72c:	f0 0d       	add	r31, r0
     72e:	11 24       	eor	r1, r1
     730:	e0 58       	subi	r30, 0x80	; 128
     732:	fe 4f       	sbci	r31, 0xFE	; 254
     734:	15 82       	std	Z+5, r1	; 0x05
     736:	14 82       	std	Z+4, r1	; 0x04
     738:	4f 5f       	subi	r20, 0xFF	; 255
     73a:	5f 4f       	sbci	r21, 0xFF	; 255
     73c:	5a 83       	std	Y+2, r21	; 0x02
     73e:	49 83       	std	Y+1, r20	; 0x01
     740:	29 81       	ldd	r18, Y+1	; 0x01
     742:	3a 81       	ldd	r19, Y+2	; 0x02
     744:	24 30       	cpi	r18, 0x04	; 4
     746:	31 05       	cpc	r19, r1
     748:	4c f2       	brlt	.-110    	; 0x6dc <initialize+0x94>
     74a:	e8 e1       	ldi	r30, 0x18	; 24
     74c:	f2 e0       	ldi	r31, 0x02	; 2
     74e:	11 82       	std	Z+1, r1	; 0x01
     750:	10 82       	st	Z, r1
     752:	15 82       	std	Z+5, r1	; 0x05
     754:	14 82       	std	Z+4, r1	; 0x04
     756:	13 82       	std	Z+3, r1	; 0x03
     758:	12 82       	std	Z+2, r1	; 0x02
     75a:	e1 e6       	ldi	r30, 0x61	; 97
     75c:	f0 e0       	ldi	r31, 0x00	; 0
     75e:	80 e8       	ldi	r24, 0x80	; 128
     760:	80 83       	st	Z, r24
     762:	10 82       	st	Z, r1
     764:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     768:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     76c:	84 e0       	ldi	r24, 0x04	; 4
     76e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     772:	81 e0       	ldi	r24, 0x01	; 1
     774:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     778:	0f 90       	pop	r0
     77a:	0f 90       	pop	r0
     77c:	0f 90       	pop	r0
     77e:	0f 90       	pop	r0
     780:	df 91       	pop	r29
     782:	cf 91       	pop	r28
     784:	08 95       	ret

00000786 <dispatch>:
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	00 d0       	rcall	.+0      	; 0x78c <dispatch+0x6>
     78c:	cd b7       	in	r28, 0x3d	; 61
     78e:	de b7       	in	r29, 0x3e	; 62
     790:	9a 83       	std	Y+2, r25	; 0x02
     792:	89 83       	std	Y+1, r24	; 0x01
     794:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <current>
     798:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <current+0x1>
     79c:	06 96       	adiw	r24, 0x06	; 6
     79e:	0e 94 24 10 	call	0x2048	; 0x2048 <setjmp>
     7a2:	89 2b       	or	r24, r25
     7a4:	59 f4       	brne	.+22     	; 0x7bc <dispatch+0x36>
     7a6:	89 81       	ldd	r24, Y+1	; 0x01
     7a8:	9a 81       	ldd	r25, Y+2	; 0x02
     7aa:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <current+0x1>
     7ae:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <current>
     7b2:	61 e0       	ldi	r22, 0x01	; 1
     7b4:	70 e0       	ldi	r23, 0x00	; 0
     7b6:	06 96       	adiw	r24, 0x06	; 6
     7b8:	0e 94 44 10 	call	0x2088	; 0x2088 <longjmp>
     7bc:	0f 90       	pop	r0
     7be:	0f 90       	pop	r0
     7c0:	df 91       	pop	r29
     7c2:	cf 91       	pop	r28
     7c4:	08 95       	ret

000007c6 <enqueueByDeadline>:
     7c6:	0f 93       	push	r16
     7c8:	1f 93       	push	r17
     7ca:	cf 93       	push	r28
     7cc:	df 93       	push	r29
     7ce:	dc 01       	movw	r26, r24
     7d0:	cb 01       	movw	r24, r22
     7d2:	eb 01       	movw	r28, r22
     7d4:	e8 81       	ld	r30, Y
     7d6:	f9 81       	ldd	r31, Y+1	; 0x01
     7d8:	c0 e0       	ldi	r28, 0x00	; 0
     7da:	d0 e0       	ldi	r29, 0x00	; 0
     7dc:	04 c0       	rjmp	.+8      	; 0x7e6 <enqueueByDeadline+0x20>
     7de:	ef 01       	movw	r28, r30
     7e0:	01 90       	ld	r0, Z+
     7e2:	f0 81       	ld	r31, Z
     7e4:	e0 2d       	mov	r30, r0
     7e6:	30 97       	sbiw	r30, 0x00	; 0
     7e8:	79 f0       	breq	.+30     	; 0x808 <enqueueByDeadline+0x42>
     7ea:	06 81       	ldd	r16, Z+6	; 0x06
     7ec:	17 81       	ldd	r17, Z+7	; 0x07
     7ee:	20 85       	ldd	r18, Z+8	; 0x08
     7f0:	31 85       	ldd	r19, Z+9	; 0x09
     7f2:	16 96       	adiw	r26, 0x06	; 6
     7f4:	4d 91       	ld	r20, X+
     7f6:	5d 91       	ld	r21, X+
     7f8:	6d 91       	ld	r22, X+
     7fa:	7c 91       	ld	r23, X
     7fc:	19 97       	sbiw	r26, 0x09	; 9
     7fe:	40 17       	cp	r20, r16
     800:	51 07       	cpc	r21, r17
     802:	62 07       	cpc	r22, r18
     804:	73 07       	cpc	r23, r19
     806:	5c f7       	brge	.-42     	; 0x7de <enqueueByDeadline+0x18>
     808:	11 96       	adiw	r26, 0x01	; 1
     80a:	fc 93       	st	X, r31
     80c:	ee 93       	st	-X, r30
     80e:	20 97       	sbiw	r28, 0x00	; 0
     810:	21 f4       	brne	.+8      	; 0x81a <enqueueByDeadline+0x54>
     812:	fc 01       	movw	r30, r24
     814:	b1 83       	std	Z+1, r27	; 0x01
     816:	a0 83       	st	Z, r26
     818:	02 c0       	rjmp	.+4      	; 0x81e <enqueueByDeadline+0x58>
     81a:	b9 83       	std	Y+1, r27	; 0x01
     81c:	a8 83       	st	Y, r26
     81e:	df 91       	pop	r29
     820:	cf 91       	pop	r28
     822:	1f 91       	pop	r17
     824:	0f 91       	pop	r16
     826:	08 95       	ret

00000828 <enqueueByBaseline>:
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	dc 01       	movw	r26, r24
     832:	cb 01       	movw	r24, r22
     834:	eb 01       	movw	r28, r22
     836:	e8 81       	ld	r30, Y
     838:	f9 81       	ldd	r31, Y+1	; 0x01
     83a:	c0 e0       	ldi	r28, 0x00	; 0
     83c:	d0 e0       	ldi	r29, 0x00	; 0
     83e:	04 c0       	rjmp	.+8      	; 0x848 <enqueueByBaseline+0x20>
     840:	ef 01       	movw	r28, r30
     842:	01 90       	ld	r0, Z+
     844:	f0 81       	ld	r31, Z
     846:	e0 2d       	mov	r30, r0
     848:	30 97       	sbiw	r30, 0x00	; 0
     84a:	79 f0       	breq	.+30     	; 0x86a <enqueueByBaseline+0x42>
     84c:	02 81       	ldd	r16, Z+2	; 0x02
     84e:	13 81       	ldd	r17, Z+3	; 0x03
     850:	24 81       	ldd	r18, Z+4	; 0x04
     852:	35 81       	ldd	r19, Z+5	; 0x05
     854:	12 96       	adiw	r26, 0x02	; 2
     856:	4d 91       	ld	r20, X+
     858:	5d 91       	ld	r21, X+
     85a:	6d 91       	ld	r22, X+
     85c:	7c 91       	ld	r23, X
     85e:	15 97       	sbiw	r26, 0x05	; 5
     860:	40 17       	cp	r20, r16
     862:	51 07       	cpc	r21, r17
     864:	62 07       	cpc	r22, r18
     866:	73 07       	cpc	r23, r19
     868:	5c f7       	brge	.-42     	; 0x840 <enqueueByBaseline+0x18>
     86a:	11 96       	adiw	r26, 0x01	; 1
     86c:	fc 93       	st	X, r31
     86e:	ee 93       	st	-X, r30
     870:	20 97       	sbiw	r28, 0x00	; 0
     872:	21 f4       	brne	.+8      	; 0x87c <enqueueByBaseline+0x54>
     874:	fc 01       	movw	r30, r24
     876:	b1 83       	std	Z+1, r27	; 0x01
     878:	a0 83       	st	Z, r26
     87a:	02 c0       	rjmp	.+4      	; 0x880 <enqueueByBaseline+0x58>
     87c:	b9 83       	std	Y+1, r27	; 0x01
     87e:	a8 83       	st	Y, r26
     880:	df 91       	pop	r29
     882:	cf 91       	pop	r28
     884:	1f 91       	pop	r17
     886:	0f 91       	pop	r16
     888:	08 95       	ret

0000088a <dequeue>:
     88a:	dc 01       	movw	r26, r24
     88c:	ed 91       	ld	r30, X+
     88e:	fc 91       	ld	r31, X
     890:	11 97       	sbiw	r26, 0x01	; 1
     892:	30 97       	sbiw	r30, 0x00	; 0
     894:	59 f4       	brne	.+22     	; 0x8ac <dequeue+0x22>
     896:	8f ef       	ldi	r24, 0xFF	; 255
     898:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     89c:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     8a0:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     8a4:	81 e0       	ldi	r24, 0x01	; 1
     8a6:	83 bf       	out	0x33, r24	; 51
     8a8:	88 95       	sleep
     8aa:	fc cf       	rjmp	.-8      	; 0x8a4 <dequeue+0x1a>
     8ac:	20 81       	ld	r18, Z
     8ae:	31 81       	ldd	r19, Z+1	; 0x01
     8b0:	2d 93       	st	X+, r18
     8b2:	3c 93       	st	X, r19
     8b4:	cf 01       	movw	r24, r30
     8b6:	08 95       	ret

000008b8 <insert>:
     8b8:	fb 01       	movw	r30, r22
     8ba:	20 81       	ld	r18, Z
     8bc:	31 81       	ldd	r19, Z+1	; 0x01
     8be:	fc 01       	movw	r30, r24
     8c0:	31 83       	std	Z+1, r19	; 0x01
     8c2:	20 83       	st	Z, r18
     8c4:	fb 01       	movw	r30, r22
     8c6:	91 83       	std	Z+1, r25	; 0x01
     8c8:	80 83       	st	Z, r24
     8ca:	08 95       	ret

000008cc <push>:
     8cc:	fb 01       	movw	r30, r22
     8ce:	20 81       	ld	r18, Z
     8d0:	31 81       	ldd	r19, Z+1	; 0x01
     8d2:	fc 01       	movw	r30, r24
     8d4:	31 83       	std	Z+1, r19	; 0x01
     8d6:	20 83       	st	Z, r18
     8d8:	fb 01       	movw	r30, r22
     8da:	91 83       	std	Z+1, r25	; 0x01
     8dc:	80 83       	st	Z, r24
     8de:	08 95       	ret

000008e0 <pop>:
     8e0:	dc 01       	movw	r26, r24
     8e2:	ed 91       	ld	r30, X+
     8e4:	fc 91       	ld	r31, X
     8e6:	11 97       	sbiw	r26, 0x01	; 1
     8e8:	20 81       	ld	r18, Z
     8ea:	31 81       	ldd	r19, Z+1	; 0x01
     8ec:	2d 93       	st	X+, r18
     8ee:	3c 93       	st	X, r19
     8f0:	cf 01       	movw	r24, r30
     8f2:	08 95       	ret

000008f4 <schedule>:
     8f4:	cf 93       	push	r28
     8f6:	df 93       	push	r29
     8f8:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <activeStack>
     8fc:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <activeStack+0x1>
     900:	c2 81       	ldd	r28, Z+2	; 0x02
     902:	d3 81       	ldd	r29, Z+3	; 0x03
     904:	e0 91 5a 01 	lds	r30, 0x015A	; 0x80015a <msgQ>
     908:	f0 91 5b 01 	lds	r31, 0x015B	; 0x80015b <msgQ+0x1>
     90c:	30 97       	sbiw	r30, 0x00	; 0
     90e:	19 f1       	breq	.+70     	; 0x956 <schedule+0x62>
     910:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <threadPool>
     914:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <threadPool+0x1>
     918:	89 2b       	or	r24, r25
     91a:	e9 f0       	breq	.+58     	; 0x956 <schedule+0x62>
     91c:	20 97       	sbiw	r28, 0x00	; 0
     91e:	69 f0       	breq	.+26     	; 0x93a <schedule+0x46>
     920:	86 81       	ldd	r24, Z+6	; 0x06
     922:	97 81       	ldd	r25, Z+7	; 0x07
     924:	a0 85       	ldd	r26, Z+8	; 0x08
     926:	b1 85       	ldd	r27, Z+9	; 0x09
     928:	4e 81       	ldd	r20, Y+6	; 0x06
     92a:	5f 81       	ldd	r21, Y+7	; 0x07
     92c:	68 85       	ldd	r22, Y+8	; 0x08
     92e:	79 85       	ldd	r23, Y+9	; 0x09
     930:	84 1b       	sub	r24, r20
     932:	95 0b       	sbc	r25, r21
     934:	a6 0b       	sbc	r26, r22
     936:	b7 0b       	sbc	r27, r23
     938:	72 f4       	brpl	.+28     	; 0x956 <schedule+0x62>
     93a:	86 e4       	ldi	r24, 0x46	; 70
     93c:	91 e0       	ldi	r25, 0x01	; 1
     93e:	0e 94 70 04 	call	0x8e0	; 0x8e0 <pop>
     942:	64 e4       	ldi	r22, 0x44	; 68
     944:	71 e0       	ldi	r23, 0x01	; 1
     946:	0e 94 66 04 	call	0x8cc	; 0x8cc <push>
     94a:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <activeStack>
     94e:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <activeStack+0x1>
     952:	0e 94 c3 03 	call	0x786	; 0x786 <dispatch>
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	08 95       	ret

0000095c <__vector_1>:
     95c:	1f 92       	push	r1
     95e:	0f 92       	push	r0
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	0f 92       	push	r0
     964:	11 24       	eor	r1, r1
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	2f 93       	push	r18
     96c:	3f 93       	push	r19
     96e:	4f 93       	push	r20
     970:	5f 93       	push	r21
     972:	6f 93       	push	r22
     974:	7f 93       	push	r23
     976:	8f 93       	push	r24
     978:	9f 93       	push	r25
     97a:	af 93       	push	r26
     97c:	bf 93       	push	r27
     97e:	ef 93       	push	r30
     980:	ff 93       	push	r31
     982:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     986:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     98a:	ac 01       	movw	r20, r24
     98c:	09 2e       	mov	r0, r25
     98e:	00 0c       	add	r0, r0
     990:	66 0b       	sbc	r22, r22
     992:	77 0b       	sbc	r23, r23
     994:	9a 01       	movw	r18, r20
     996:	11 27       	eor	r17, r17
     998:	00 27       	eor	r16, r16
     99a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     99e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9a2:	60 e0       	ldi	r22, 0x00	; 0
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	40 2b       	or	r20, r16
     9a8:	51 2b       	or	r21, r17
     9aa:	62 2b       	or	r22, r18
     9ac:	73 2b       	or	r23, r19
     9ae:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     9b2:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     9b6:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     9ba:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     9be:	b0 9b       	sbis	0x16, 0	; 22
     9c0:	1a c0       	rjmp	.+52     	; 0x9f6 <__vector_1+0x9a>
     9c2:	01 96       	adiw	r24, 0x01	; 1
     9c4:	09 2e       	mov	r0, r25
     9c6:	00 0c       	add	r0, r0
     9c8:	aa 0b       	sbc	r26, r26
     9ca:	bb 0b       	sbc	r27, r27
     9cc:	bc 01       	movw	r22, r24
     9ce:	55 27       	eor	r21, r21
     9d0:	44 27       	eor	r20, r20
     9d2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9d6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9da:	a0 e0       	ldi	r26, 0x00	; 0
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	84 2b       	or	r24, r20
     9e0:	95 2b       	or	r25, r21
     9e2:	a6 2b       	or	r26, r22
     9e4:	b7 2b       	or	r27, r23
     9e6:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     9ea:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
     9ee:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
     9f2:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
     9f6:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable>
     9fa:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x1>
     9fe:	30 97       	sbiw	r30, 0x00	; 0
     a00:	39 f0       	breq	.+14     	; 0xa10 <__vector_1+0xb4>
     a02:	60 e0       	ldi	r22, 0x00	; 0
     a04:	70 e0       	ldi	r23, 0x00	; 0
     a06:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable>
     a0a:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x1>
     a0e:	09 95       	icall
     a10:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
     a14:	ff 91       	pop	r31
     a16:	ef 91       	pop	r30
     a18:	bf 91       	pop	r27
     a1a:	af 91       	pop	r26
     a1c:	9f 91       	pop	r25
     a1e:	8f 91       	pop	r24
     a20:	7f 91       	pop	r23
     a22:	6f 91       	pop	r22
     a24:	5f 91       	pop	r21
     a26:	4f 91       	pop	r20
     a28:	3f 91       	pop	r19
     a2a:	2f 91       	pop	r18
     a2c:	1f 91       	pop	r17
     a2e:	0f 91       	pop	r16
     a30:	0f 90       	pop	r0
     a32:	0f be       	out	0x3f, r0	; 63
     a34:	0f 90       	pop	r0
     a36:	1f 90       	pop	r1
     a38:	18 95       	reti

00000a3a <__vector_2>:
     a3a:	1f 92       	push	r1
     a3c:	0f 92       	push	r0
     a3e:	0f b6       	in	r0, 0x3f	; 63
     a40:	0f 92       	push	r0
     a42:	11 24       	eor	r1, r1
     a44:	0f 93       	push	r16
     a46:	1f 93       	push	r17
     a48:	2f 93       	push	r18
     a4a:	3f 93       	push	r19
     a4c:	4f 93       	push	r20
     a4e:	5f 93       	push	r21
     a50:	6f 93       	push	r22
     a52:	7f 93       	push	r23
     a54:	8f 93       	push	r24
     a56:	9f 93       	push	r25
     a58:	af 93       	push	r26
     a5a:	bf 93       	push	r27
     a5c:	ef 93       	push	r30
     a5e:	ff 93       	push	r31
     a60:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     a64:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     a68:	ac 01       	movw	r20, r24
     a6a:	09 2e       	mov	r0, r25
     a6c:	00 0c       	add	r0, r0
     a6e:	66 0b       	sbc	r22, r22
     a70:	77 0b       	sbc	r23, r23
     a72:	9a 01       	movw	r18, r20
     a74:	11 27       	eor	r17, r17
     a76:	00 27       	eor	r16, r16
     a78:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a7c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a80:	60 e0       	ldi	r22, 0x00	; 0
     a82:	70 e0       	ldi	r23, 0x00	; 0
     a84:	40 2b       	or	r20, r16
     a86:	51 2b       	or	r21, r17
     a88:	62 2b       	or	r22, r18
     a8a:	73 2b       	or	r23, r19
     a8c:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     a90:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     a94:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     a98:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     a9c:	b0 9b       	sbis	0x16, 0	; 22
     a9e:	1a c0       	rjmp	.+52     	; 0xad4 <__vector_2+0x9a>
     aa0:	01 96       	adiw	r24, 0x01	; 1
     aa2:	09 2e       	mov	r0, r25
     aa4:	00 0c       	add	r0, r0
     aa6:	aa 0b       	sbc	r26, r26
     aa8:	bb 0b       	sbc	r27, r27
     aaa:	bc 01       	movw	r22, r24
     aac:	55 27       	eor	r21, r21
     aae:	44 27       	eor	r20, r20
     ab0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ab4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ab8:	a0 e0       	ldi	r26, 0x00	; 0
     aba:	b0 e0       	ldi	r27, 0x00	; 0
     abc:	84 2b       	or	r24, r20
     abe:	95 2b       	or	r25, r21
     ac0:	a6 2b       	or	r26, r22
     ac2:	b7 2b       	or	r27, r23
     ac4:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     ac8:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
     acc:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
     ad0:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
     ad4:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x2>
     ad8:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x3>
     adc:	30 97       	sbiw	r30, 0x00	; 0
     ade:	39 f0       	breq	.+14     	; 0xaee <__vector_2+0xb4>
     ae0:	61 e0       	ldi	r22, 0x01	; 1
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x2>
     ae8:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x3>
     aec:	09 95       	icall
     aee:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
     af2:	ff 91       	pop	r31
     af4:	ef 91       	pop	r30
     af6:	bf 91       	pop	r27
     af8:	af 91       	pop	r26
     afa:	9f 91       	pop	r25
     afc:	8f 91       	pop	r24
     afe:	7f 91       	pop	r23
     b00:	6f 91       	pop	r22
     b02:	5f 91       	pop	r21
     b04:	4f 91       	pop	r20
     b06:	3f 91       	pop	r19
     b08:	2f 91       	pop	r18
     b0a:	1f 91       	pop	r17
     b0c:	0f 91       	pop	r16
     b0e:	0f 90       	pop	r0
     b10:	0f be       	out	0x3f, r0	; 63
     b12:	0f 90       	pop	r0
     b14:	1f 90       	pop	r1
     b16:	18 95       	reti

00000b18 <__vector_3>:
     b18:	1f 92       	push	r1
     b1a:	0f 92       	push	r0
     b1c:	0f b6       	in	r0, 0x3f	; 63
     b1e:	0f 92       	push	r0
     b20:	11 24       	eor	r1, r1
     b22:	0f 93       	push	r16
     b24:	1f 93       	push	r17
     b26:	2f 93       	push	r18
     b28:	3f 93       	push	r19
     b2a:	4f 93       	push	r20
     b2c:	5f 93       	push	r21
     b2e:	6f 93       	push	r22
     b30:	7f 93       	push	r23
     b32:	8f 93       	push	r24
     b34:	9f 93       	push	r25
     b36:	af 93       	push	r26
     b38:	bf 93       	push	r27
     b3a:	ef 93       	push	r30
     b3c:	ff 93       	push	r31
     b3e:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     b42:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     b46:	ac 01       	movw	r20, r24
     b48:	09 2e       	mov	r0, r25
     b4a:	00 0c       	add	r0, r0
     b4c:	66 0b       	sbc	r22, r22
     b4e:	77 0b       	sbc	r23, r23
     b50:	9a 01       	movw	r18, r20
     b52:	11 27       	eor	r17, r17
     b54:	00 27       	eor	r16, r16
     b56:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b5a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	40 2b       	or	r20, r16
     b64:	51 2b       	or	r21, r17
     b66:	62 2b       	or	r22, r18
     b68:	73 2b       	or	r23, r19
     b6a:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     b6e:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     b72:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     b76:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     b7a:	b0 9b       	sbis	0x16, 0	; 22
     b7c:	1a c0       	rjmp	.+52     	; 0xbb2 <__vector_3+0x9a>
     b7e:	01 96       	adiw	r24, 0x01	; 1
     b80:	09 2e       	mov	r0, r25
     b82:	00 0c       	add	r0, r0
     b84:	aa 0b       	sbc	r26, r26
     b86:	bb 0b       	sbc	r27, r27
     b88:	bc 01       	movw	r22, r24
     b8a:	55 27       	eor	r21, r21
     b8c:	44 27       	eor	r20, r20
     b8e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b92:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b96:	a0 e0       	ldi	r26, 0x00	; 0
     b98:	b0 e0       	ldi	r27, 0x00	; 0
     b9a:	84 2b       	or	r24, r20
     b9c:	95 2b       	or	r25, r21
     b9e:	a6 2b       	or	r26, r22
     ba0:	b7 2b       	or	r27, r23
     ba2:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     ba6:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
     baa:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
     bae:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
     bb2:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x4>
     bb6:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x5>
     bba:	30 97       	sbiw	r30, 0x00	; 0
     bbc:	39 f0       	breq	.+14     	; 0xbcc <__vector_3+0xb4>
     bbe:	62 e0       	ldi	r22, 0x02	; 2
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x4>
     bc6:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x5>
     bca:	09 95       	icall
     bcc:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
     bd0:	ff 91       	pop	r31
     bd2:	ef 91       	pop	r30
     bd4:	bf 91       	pop	r27
     bd6:	af 91       	pop	r26
     bd8:	9f 91       	pop	r25
     bda:	8f 91       	pop	r24
     bdc:	7f 91       	pop	r23
     bde:	6f 91       	pop	r22
     be0:	5f 91       	pop	r21
     be2:	4f 91       	pop	r20
     be4:	3f 91       	pop	r19
     be6:	2f 91       	pop	r18
     be8:	1f 91       	pop	r17
     bea:	0f 91       	pop	r16
     bec:	0f 90       	pop	r0
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	0f 90       	pop	r0
     bf2:	1f 90       	pop	r1
     bf4:	18 95       	reti

00000bf6 <__vector_4>:
     bf6:	1f 92       	push	r1
     bf8:	0f 92       	push	r0
     bfa:	0f b6       	in	r0, 0x3f	; 63
     bfc:	0f 92       	push	r0
     bfe:	11 24       	eor	r1, r1
     c00:	0f 93       	push	r16
     c02:	1f 93       	push	r17
     c04:	2f 93       	push	r18
     c06:	3f 93       	push	r19
     c08:	4f 93       	push	r20
     c0a:	5f 93       	push	r21
     c0c:	6f 93       	push	r22
     c0e:	7f 93       	push	r23
     c10:	8f 93       	push	r24
     c12:	9f 93       	push	r25
     c14:	af 93       	push	r26
     c16:	bf 93       	push	r27
     c18:	ef 93       	push	r30
     c1a:	ff 93       	push	r31
     c1c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     c20:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     c24:	ac 01       	movw	r20, r24
     c26:	09 2e       	mov	r0, r25
     c28:	00 0c       	add	r0, r0
     c2a:	66 0b       	sbc	r22, r22
     c2c:	77 0b       	sbc	r23, r23
     c2e:	9a 01       	movw	r18, r20
     c30:	11 27       	eor	r17, r17
     c32:	00 27       	eor	r16, r16
     c34:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c38:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	40 2b       	or	r20, r16
     c42:	51 2b       	or	r21, r17
     c44:	62 2b       	or	r22, r18
     c46:	73 2b       	or	r23, r19
     c48:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     c4c:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     c50:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     c54:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     c58:	b0 9b       	sbis	0x16, 0	; 22
     c5a:	1a c0       	rjmp	.+52     	; 0xc90 <__vector_4+0x9a>
     c5c:	01 96       	adiw	r24, 0x01	; 1
     c5e:	09 2e       	mov	r0, r25
     c60:	00 0c       	add	r0, r0
     c62:	aa 0b       	sbc	r26, r26
     c64:	bb 0b       	sbc	r27, r27
     c66:	bc 01       	movw	r22, r24
     c68:	55 27       	eor	r21, r21
     c6a:	44 27       	eor	r20, r20
     c6c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c70:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c74:	a0 e0       	ldi	r26, 0x00	; 0
     c76:	b0 e0       	ldi	r27, 0x00	; 0
     c78:	84 2b       	or	r24, r20
     c7a:	95 2b       	or	r25, r21
     c7c:	a6 2b       	or	r26, r22
     c7e:	b7 2b       	or	r27, r23
     c80:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     c84:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
     c88:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
     c8c:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
     c90:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x6>
     c94:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x7>
     c98:	30 97       	sbiw	r30, 0x00	; 0
     c9a:	39 f0       	breq	.+14     	; 0xcaa <__vector_4+0xb4>
     c9c:	63 e0       	ldi	r22, 0x03	; 3
     c9e:	70 e0       	ldi	r23, 0x00	; 0
     ca0:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x6>
     ca4:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x7>
     ca8:	09 95       	icall
     caa:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
     cae:	ff 91       	pop	r31
     cb0:	ef 91       	pop	r30
     cb2:	bf 91       	pop	r27
     cb4:	af 91       	pop	r26
     cb6:	9f 91       	pop	r25
     cb8:	8f 91       	pop	r24
     cba:	7f 91       	pop	r23
     cbc:	6f 91       	pop	r22
     cbe:	5f 91       	pop	r21
     cc0:	4f 91       	pop	r20
     cc2:	3f 91       	pop	r19
     cc4:	2f 91       	pop	r18
     cc6:	1f 91       	pop	r17
     cc8:	0f 91       	pop	r16
     cca:	0f 90       	pop	r0
     ccc:	0f be       	out	0x3f, r0	; 63
     cce:	0f 90       	pop	r0
     cd0:	1f 90       	pop	r1
     cd2:	18 95       	reti

00000cd4 <__vector_5>:
     cd4:	1f 92       	push	r1
     cd6:	0f 92       	push	r0
     cd8:	0f b6       	in	r0, 0x3f	; 63
     cda:	0f 92       	push	r0
     cdc:	11 24       	eor	r1, r1
     cde:	0f 93       	push	r16
     ce0:	1f 93       	push	r17
     ce2:	2f 93       	push	r18
     ce4:	3f 93       	push	r19
     ce6:	4f 93       	push	r20
     ce8:	5f 93       	push	r21
     cea:	6f 93       	push	r22
     cec:	7f 93       	push	r23
     cee:	8f 93       	push	r24
     cf0:	9f 93       	push	r25
     cf2:	af 93       	push	r26
     cf4:	bf 93       	push	r27
     cf6:	ef 93       	push	r30
     cf8:	ff 93       	push	r31
     cfa:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     cfe:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     d02:	ac 01       	movw	r20, r24
     d04:	09 2e       	mov	r0, r25
     d06:	00 0c       	add	r0, r0
     d08:	66 0b       	sbc	r22, r22
     d0a:	77 0b       	sbc	r23, r23
     d0c:	9a 01       	movw	r18, r20
     d0e:	11 27       	eor	r17, r17
     d10:	00 27       	eor	r16, r16
     d12:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d16:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d1a:	60 e0       	ldi	r22, 0x00	; 0
     d1c:	70 e0       	ldi	r23, 0x00	; 0
     d1e:	40 2b       	or	r20, r16
     d20:	51 2b       	or	r21, r17
     d22:	62 2b       	or	r22, r18
     d24:	73 2b       	or	r23, r19
     d26:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     d2a:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     d2e:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     d32:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     d36:	b0 9b       	sbis	0x16, 0	; 22
     d38:	1a c0       	rjmp	.+52     	; 0xd6e <__vector_5+0x9a>
     d3a:	01 96       	adiw	r24, 0x01	; 1
     d3c:	09 2e       	mov	r0, r25
     d3e:	00 0c       	add	r0, r0
     d40:	aa 0b       	sbc	r26, r26
     d42:	bb 0b       	sbc	r27, r27
     d44:	bc 01       	movw	r22, r24
     d46:	55 27       	eor	r21, r21
     d48:	44 27       	eor	r20, r20
     d4a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d4e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d52:	a0 e0       	ldi	r26, 0x00	; 0
     d54:	b0 e0       	ldi	r27, 0x00	; 0
     d56:	84 2b       	or	r24, r20
     d58:	95 2b       	or	r25, r21
     d5a:	a6 2b       	or	r26, r22
     d5c:	b7 2b       	or	r27, r23
     d5e:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     d62:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
     d66:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
     d6a:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
     d6e:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x8>
     d72:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x9>
     d76:	30 97       	sbiw	r30, 0x00	; 0
     d78:	39 f0       	breq	.+14     	; 0xd88 <__vector_5+0xb4>
     d7a:	64 e0       	ldi	r22, 0x04	; 4
     d7c:	70 e0       	ldi	r23, 0x00	; 0
     d7e:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x8>
     d82:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x9>
     d86:	09 95       	icall
     d88:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
     d8c:	ff 91       	pop	r31
     d8e:	ef 91       	pop	r30
     d90:	bf 91       	pop	r27
     d92:	af 91       	pop	r26
     d94:	9f 91       	pop	r25
     d96:	8f 91       	pop	r24
     d98:	7f 91       	pop	r23
     d9a:	6f 91       	pop	r22
     d9c:	5f 91       	pop	r21
     d9e:	4f 91       	pop	r20
     da0:	3f 91       	pop	r19
     da2:	2f 91       	pop	r18
     da4:	1f 91       	pop	r17
     da6:	0f 91       	pop	r16
     da8:	0f 90       	pop	r0
     daa:	0f be       	out	0x3f, r0	; 63
     dac:	0f 90       	pop	r0
     dae:	1f 90       	pop	r1
     db0:	18 95       	reti

00000db2 <__vector_10>:
     db2:	1f 92       	push	r1
     db4:	0f 92       	push	r0
     db6:	0f b6       	in	r0, 0x3f	; 63
     db8:	0f 92       	push	r0
     dba:	11 24       	eor	r1, r1
     dbc:	0f 93       	push	r16
     dbe:	1f 93       	push	r17
     dc0:	2f 93       	push	r18
     dc2:	3f 93       	push	r19
     dc4:	4f 93       	push	r20
     dc6:	5f 93       	push	r21
     dc8:	6f 93       	push	r22
     dca:	7f 93       	push	r23
     dcc:	8f 93       	push	r24
     dce:	9f 93       	push	r25
     dd0:	af 93       	push	r26
     dd2:	bf 93       	push	r27
     dd4:	ef 93       	push	r30
     dd6:	ff 93       	push	r31
     dd8:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     ddc:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     de0:	ac 01       	movw	r20, r24
     de2:	09 2e       	mov	r0, r25
     de4:	00 0c       	add	r0, r0
     de6:	66 0b       	sbc	r22, r22
     de8:	77 0b       	sbc	r23, r23
     dea:	9a 01       	movw	r18, r20
     dec:	11 27       	eor	r17, r17
     dee:	00 27       	eor	r16, r16
     df0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     df4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     df8:	60 e0       	ldi	r22, 0x00	; 0
     dfa:	70 e0       	ldi	r23, 0x00	; 0
     dfc:	40 2b       	or	r20, r16
     dfe:	51 2b       	or	r21, r17
     e00:	62 2b       	or	r22, r18
     e02:	73 2b       	or	r23, r19
     e04:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     e08:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     e0c:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     e10:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     e14:	b0 9b       	sbis	0x16, 0	; 22
     e16:	1a c0       	rjmp	.+52     	; 0xe4c <__vector_10+0x9a>
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	09 2e       	mov	r0, r25
     e1c:	00 0c       	add	r0, r0
     e1e:	aa 0b       	sbc	r26, r26
     e20:	bb 0b       	sbc	r27, r27
     e22:	bc 01       	movw	r22, r24
     e24:	55 27       	eor	r21, r21
     e26:	44 27       	eor	r20, r20
     e28:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e2c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e30:	a0 e0       	ldi	r26, 0x00	; 0
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	84 2b       	or	r24, r20
     e36:	95 2b       	or	r25, r21
     e38:	a6 2b       	or	r26, r22
     e3a:	b7 2b       	or	r27, r23
     e3c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     e40:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
     e44:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
     e48:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
     e4c:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0xa>
     e50:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0xb>
     e54:	30 97       	sbiw	r30, 0x00	; 0
     e56:	39 f0       	breq	.+14     	; 0xe66 <__vector_10+0xb4>
     e58:	65 e0       	ldi	r22, 0x05	; 5
     e5a:	70 e0       	ldi	r23, 0x00	; 0
     e5c:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0xa>
     e60:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0xb>
     e64:	09 95       	icall
     e66:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
     e6a:	ff 91       	pop	r31
     e6c:	ef 91       	pop	r30
     e6e:	bf 91       	pop	r27
     e70:	af 91       	pop	r26
     e72:	9f 91       	pop	r25
     e74:	8f 91       	pop	r24
     e76:	7f 91       	pop	r23
     e78:	6f 91       	pop	r22
     e7a:	5f 91       	pop	r21
     e7c:	4f 91       	pop	r20
     e7e:	3f 91       	pop	r19
     e80:	2f 91       	pop	r18
     e82:	1f 91       	pop	r17
     e84:	0f 91       	pop	r16
     e86:	0f 90       	pop	r0
     e88:	0f be       	out	0x3f, r0	; 63
     e8a:	0f 90       	pop	r0
     e8c:	1f 90       	pop	r1
     e8e:	18 95       	reti

00000e90 <__vector_11>:
     e90:	1f 92       	push	r1
     e92:	0f 92       	push	r0
     e94:	0f b6       	in	r0, 0x3f	; 63
     e96:	0f 92       	push	r0
     e98:	11 24       	eor	r1, r1
     e9a:	0f 93       	push	r16
     e9c:	1f 93       	push	r17
     e9e:	2f 93       	push	r18
     ea0:	3f 93       	push	r19
     ea2:	4f 93       	push	r20
     ea4:	5f 93       	push	r21
     ea6:	6f 93       	push	r22
     ea8:	7f 93       	push	r23
     eaa:	8f 93       	push	r24
     eac:	9f 93       	push	r25
     eae:	af 93       	push	r26
     eb0:	bf 93       	push	r27
     eb2:	ef 93       	push	r30
     eb4:	ff 93       	push	r31
     eb6:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     eba:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     ebe:	ac 01       	movw	r20, r24
     ec0:	09 2e       	mov	r0, r25
     ec2:	00 0c       	add	r0, r0
     ec4:	66 0b       	sbc	r22, r22
     ec6:	77 0b       	sbc	r23, r23
     ec8:	9a 01       	movw	r18, r20
     eca:	11 27       	eor	r17, r17
     ecc:	00 27       	eor	r16, r16
     ece:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ed2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ed6:	60 e0       	ldi	r22, 0x00	; 0
     ed8:	70 e0       	ldi	r23, 0x00	; 0
     eda:	40 2b       	or	r20, r16
     edc:	51 2b       	or	r21, r17
     ede:	62 2b       	or	r22, r18
     ee0:	73 2b       	or	r23, r19
     ee2:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     ee6:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     eea:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     eee:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     ef2:	b0 9b       	sbis	0x16, 0	; 22
     ef4:	1a c0       	rjmp	.+52     	; 0xf2a <__vector_11+0x9a>
     ef6:	01 96       	adiw	r24, 0x01	; 1
     ef8:	09 2e       	mov	r0, r25
     efa:	00 0c       	add	r0, r0
     efc:	aa 0b       	sbc	r26, r26
     efe:	bb 0b       	sbc	r27, r27
     f00:	bc 01       	movw	r22, r24
     f02:	55 27       	eor	r21, r21
     f04:	44 27       	eor	r20, r20
     f06:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f0a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f0e:	a0 e0       	ldi	r26, 0x00	; 0
     f10:	b0 e0       	ldi	r27, 0x00	; 0
     f12:	84 2b       	or	r24, r20
     f14:	95 2b       	or	r25, r21
     f16:	a6 2b       	or	r26, r22
     f18:	b7 2b       	or	r27, r23
     f1a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     f1e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
     f22:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
     f26:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
     f2a:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0xc>
     f2e:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0xd>
     f32:	30 97       	sbiw	r30, 0x00	; 0
     f34:	39 f0       	breq	.+14     	; 0xf44 <__vector_11+0xb4>
     f36:	66 e0       	ldi	r22, 0x06	; 6
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0xc>
     f3e:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0xd>
     f42:	09 95       	icall
     f44:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
     f48:	ff 91       	pop	r31
     f4a:	ef 91       	pop	r30
     f4c:	bf 91       	pop	r27
     f4e:	af 91       	pop	r26
     f50:	9f 91       	pop	r25
     f52:	8f 91       	pop	r24
     f54:	7f 91       	pop	r23
     f56:	6f 91       	pop	r22
     f58:	5f 91       	pop	r21
     f5a:	4f 91       	pop	r20
     f5c:	3f 91       	pop	r19
     f5e:	2f 91       	pop	r18
     f60:	1f 91       	pop	r17
     f62:	0f 91       	pop	r16
     f64:	0f 90       	pop	r0
     f66:	0f be       	out	0x3f, r0	; 63
     f68:	0f 90       	pop	r0
     f6a:	1f 90       	pop	r1
     f6c:	18 95       	reti

00000f6e <__vector_12>:
     f6e:	1f 92       	push	r1
     f70:	0f 92       	push	r0
     f72:	0f b6       	in	r0, 0x3f	; 63
     f74:	0f 92       	push	r0
     f76:	11 24       	eor	r1, r1
     f78:	0f 93       	push	r16
     f7a:	1f 93       	push	r17
     f7c:	2f 93       	push	r18
     f7e:	3f 93       	push	r19
     f80:	4f 93       	push	r20
     f82:	5f 93       	push	r21
     f84:	6f 93       	push	r22
     f86:	7f 93       	push	r23
     f88:	8f 93       	push	r24
     f8a:	9f 93       	push	r25
     f8c:	af 93       	push	r26
     f8e:	bf 93       	push	r27
     f90:	ef 93       	push	r30
     f92:	ff 93       	push	r31
     f94:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
     f98:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
     f9c:	ac 01       	movw	r20, r24
     f9e:	09 2e       	mov	r0, r25
     fa0:	00 0c       	add	r0, r0
     fa2:	66 0b       	sbc	r22, r22
     fa4:	77 0b       	sbc	r23, r23
     fa6:	9a 01       	movw	r18, r20
     fa8:	11 27       	eor	r17, r17
     faa:	00 27       	eor	r16, r16
     fac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fb0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fb4:	60 e0       	ldi	r22, 0x00	; 0
     fb6:	70 e0       	ldi	r23, 0x00	; 0
     fb8:	40 2b       	or	r20, r16
     fba:	51 2b       	or	r21, r17
     fbc:	62 2b       	or	r22, r18
     fbe:	73 2b       	or	r23, r19
     fc0:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
     fc4:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
     fc8:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
     fcc:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
     fd0:	b0 9b       	sbis	0x16, 0	; 22
     fd2:	1a c0       	rjmp	.+52     	; 0x1008 <__vector_12+0x9a>
     fd4:	01 96       	adiw	r24, 0x01	; 1
     fd6:	09 2e       	mov	r0, r25
     fd8:	00 0c       	add	r0, r0
     fda:	aa 0b       	sbc	r26, r26
     fdc:	bb 0b       	sbc	r27, r27
     fde:	bc 01       	movw	r22, r24
     fe0:	55 27       	eor	r21, r21
     fe2:	44 27       	eor	r20, r20
     fe4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fe8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fec:	a0 e0       	ldi	r26, 0x00	; 0
     fee:	b0 e0       	ldi	r27, 0x00	; 0
     ff0:	84 2b       	or	r24, r20
     ff2:	95 2b       	or	r25, r21
     ff4:	a6 2b       	or	r26, r22
     ff6:	b7 2b       	or	r27, r23
     ff8:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
     ffc:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    1000:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    1004:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    1008:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0xe>
    100c:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0xf>
    1010:	30 97       	sbiw	r30, 0x00	; 0
    1012:	39 f0       	breq	.+14     	; 0x1022 <__vector_12+0xb4>
    1014:	67 e0       	ldi	r22, 0x07	; 7
    1016:	70 e0       	ldi	r23, 0x00	; 0
    1018:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0xe>
    101c:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0xf>
    1020:	09 95       	icall
    1022:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    1026:	ff 91       	pop	r31
    1028:	ef 91       	pop	r30
    102a:	bf 91       	pop	r27
    102c:	af 91       	pop	r26
    102e:	9f 91       	pop	r25
    1030:	8f 91       	pop	r24
    1032:	7f 91       	pop	r23
    1034:	6f 91       	pop	r22
    1036:	5f 91       	pop	r21
    1038:	4f 91       	pop	r20
    103a:	3f 91       	pop	r19
    103c:	2f 91       	pop	r18
    103e:	1f 91       	pop	r17
    1040:	0f 91       	pop	r16
    1042:	0f 90       	pop	r0
    1044:	0f be       	out	0x3f, r0	; 63
    1046:	0f 90       	pop	r0
    1048:	1f 90       	pop	r1
    104a:	18 95       	reti

0000104c <__vector_13>:
    104c:	1f 92       	push	r1
    104e:	0f 92       	push	r0
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	0f 92       	push	r0
    1054:	11 24       	eor	r1, r1
    1056:	0f 93       	push	r16
    1058:	1f 93       	push	r17
    105a:	2f 93       	push	r18
    105c:	3f 93       	push	r19
    105e:	4f 93       	push	r20
    1060:	5f 93       	push	r21
    1062:	6f 93       	push	r22
    1064:	7f 93       	push	r23
    1066:	8f 93       	push	r24
    1068:	9f 93       	push	r25
    106a:	af 93       	push	r26
    106c:	bf 93       	push	r27
    106e:	ef 93       	push	r30
    1070:	ff 93       	push	r31
    1072:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1076:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    107a:	ac 01       	movw	r20, r24
    107c:	09 2e       	mov	r0, r25
    107e:	00 0c       	add	r0, r0
    1080:	66 0b       	sbc	r22, r22
    1082:	77 0b       	sbc	r23, r23
    1084:	9a 01       	movw	r18, r20
    1086:	11 27       	eor	r17, r17
    1088:	00 27       	eor	r16, r16
    108a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    108e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1092:	60 e0       	ldi	r22, 0x00	; 0
    1094:	70 e0       	ldi	r23, 0x00	; 0
    1096:	40 2b       	or	r20, r16
    1098:	51 2b       	or	r21, r17
    109a:	62 2b       	or	r22, r18
    109c:	73 2b       	or	r23, r19
    109e:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    10a2:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    10a6:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    10aa:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    10ae:	b0 9b       	sbis	0x16, 0	; 22
    10b0:	1a c0       	rjmp	.+52     	; 0x10e6 <__vector_13+0x9a>
    10b2:	01 96       	adiw	r24, 0x01	; 1
    10b4:	09 2e       	mov	r0, r25
    10b6:	00 0c       	add	r0, r0
    10b8:	aa 0b       	sbc	r26, r26
    10ba:	bb 0b       	sbc	r27, r27
    10bc:	bc 01       	movw	r22, r24
    10be:	55 27       	eor	r21, r21
    10c0:	44 27       	eor	r20, r20
    10c2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10c6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10ca:	a0 e0       	ldi	r26, 0x00	; 0
    10cc:	b0 e0       	ldi	r27, 0x00	; 0
    10ce:	84 2b       	or	r24, r20
    10d0:	95 2b       	or	r25, r21
    10d2:	a6 2b       	or	r26, r22
    10d4:	b7 2b       	or	r27, r23
    10d6:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    10da:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    10de:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    10e2:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    10e6:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x10>
    10ea:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x11>
    10ee:	30 97       	sbiw	r30, 0x00	; 0
    10f0:	39 f0       	breq	.+14     	; 0x1100 <__vector_13+0xb4>
    10f2:	68 e0       	ldi	r22, 0x08	; 8
    10f4:	70 e0       	ldi	r23, 0x00	; 0
    10f6:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x10>
    10fa:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x11>
    10fe:	09 95       	icall
    1100:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    1104:	ff 91       	pop	r31
    1106:	ef 91       	pop	r30
    1108:	bf 91       	pop	r27
    110a:	af 91       	pop	r26
    110c:	9f 91       	pop	r25
    110e:	8f 91       	pop	r24
    1110:	7f 91       	pop	r23
    1112:	6f 91       	pop	r22
    1114:	5f 91       	pop	r21
    1116:	4f 91       	pop	r20
    1118:	3f 91       	pop	r19
    111a:	2f 91       	pop	r18
    111c:	1f 91       	pop	r17
    111e:	0f 91       	pop	r16
    1120:	0f 90       	pop	r0
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	0f 90       	pop	r0
    1126:	1f 90       	pop	r1
    1128:	18 95       	reti

0000112a <__vector_14>:
    112a:	1f 92       	push	r1
    112c:	0f 92       	push	r0
    112e:	0f b6       	in	r0, 0x3f	; 63
    1130:	0f 92       	push	r0
    1132:	11 24       	eor	r1, r1
    1134:	0f 93       	push	r16
    1136:	1f 93       	push	r17
    1138:	2f 93       	push	r18
    113a:	3f 93       	push	r19
    113c:	4f 93       	push	r20
    113e:	5f 93       	push	r21
    1140:	6f 93       	push	r22
    1142:	7f 93       	push	r23
    1144:	8f 93       	push	r24
    1146:	9f 93       	push	r25
    1148:	af 93       	push	r26
    114a:	bf 93       	push	r27
    114c:	ef 93       	push	r30
    114e:	ff 93       	push	r31
    1150:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1154:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    1158:	ac 01       	movw	r20, r24
    115a:	09 2e       	mov	r0, r25
    115c:	00 0c       	add	r0, r0
    115e:	66 0b       	sbc	r22, r22
    1160:	77 0b       	sbc	r23, r23
    1162:	9a 01       	movw	r18, r20
    1164:	11 27       	eor	r17, r17
    1166:	00 27       	eor	r16, r16
    1168:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    116c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1170:	60 e0       	ldi	r22, 0x00	; 0
    1172:	70 e0       	ldi	r23, 0x00	; 0
    1174:	40 2b       	or	r20, r16
    1176:	51 2b       	or	r21, r17
    1178:	62 2b       	or	r22, r18
    117a:	73 2b       	or	r23, r19
    117c:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    1180:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    1184:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    1188:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    118c:	b0 9b       	sbis	0x16, 0	; 22
    118e:	1a c0       	rjmp	.+52     	; 0x11c4 <__vector_14+0x9a>
    1190:	01 96       	adiw	r24, 0x01	; 1
    1192:	09 2e       	mov	r0, r25
    1194:	00 0c       	add	r0, r0
    1196:	aa 0b       	sbc	r26, r26
    1198:	bb 0b       	sbc	r27, r27
    119a:	bc 01       	movw	r22, r24
    119c:	55 27       	eor	r21, r21
    119e:	44 27       	eor	r20, r20
    11a0:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11a4:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11a8:	a0 e0       	ldi	r26, 0x00	; 0
    11aa:	b0 e0       	ldi	r27, 0x00	; 0
    11ac:	84 2b       	or	r24, r20
    11ae:	95 2b       	or	r25, r21
    11b0:	a6 2b       	or	r26, r22
    11b2:	b7 2b       	or	r27, r23
    11b4:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    11b8:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    11bc:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    11c0:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    11c4:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x12>
    11c8:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x13>
    11cc:	30 97       	sbiw	r30, 0x00	; 0
    11ce:	39 f0       	breq	.+14     	; 0x11de <__vector_14+0xb4>
    11d0:	69 e0       	ldi	r22, 0x09	; 9
    11d2:	70 e0       	ldi	r23, 0x00	; 0
    11d4:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x12>
    11d8:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x13>
    11dc:	09 95       	icall
    11de:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    11e2:	ff 91       	pop	r31
    11e4:	ef 91       	pop	r30
    11e6:	bf 91       	pop	r27
    11e8:	af 91       	pop	r26
    11ea:	9f 91       	pop	r25
    11ec:	8f 91       	pop	r24
    11ee:	7f 91       	pop	r23
    11f0:	6f 91       	pop	r22
    11f2:	5f 91       	pop	r21
    11f4:	4f 91       	pop	r20
    11f6:	3f 91       	pop	r19
    11f8:	2f 91       	pop	r18
    11fa:	1f 91       	pop	r17
    11fc:	0f 91       	pop	r16
    11fe:	0f 90       	pop	r0
    1200:	0f be       	out	0x3f, r0	; 63
    1202:	0f 90       	pop	r0
    1204:	1f 90       	pop	r1
    1206:	18 95       	reti

00001208 <__vector_15>:
    1208:	1f 92       	push	r1
    120a:	0f 92       	push	r0
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	0f 92       	push	r0
    1210:	11 24       	eor	r1, r1
    1212:	0f 93       	push	r16
    1214:	1f 93       	push	r17
    1216:	2f 93       	push	r18
    1218:	3f 93       	push	r19
    121a:	4f 93       	push	r20
    121c:	5f 93       	push	r21
    121e:	6f 93       	push	r22
    1220:	7f 93       	push	r23
    1222:	8f 93       	push	r24
    1224:	9f 93       	push	r25
    1226:	af 93       	push	r26
    1228:	bf 93       	push	r27
    122a:	ef 93       	push	r30
    122c:	ff 93       	push	r31
    122e:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1232:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    1236:	ac 01       	movw	r20, r24
    1238:	09 2e       	mov	r0, r25
    123a:	00 0c       	add	r0, r0
    123c:	66 0b       	sbc	r22, r22
    123e:	77 0b       	sbc	r23, r23
    1240:	9a 01       	movw	r18, r20
    1242:	11 27       	eor	r17, r17
    1244:	00 27       	eor	r16, r16
    1246:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    124a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    124e:	60 e0       	ldi	r22, 0x00	; 0
    1250:	70 e0       	ldi	r23, 0x00	; 0
    1252:	40 2b       	or	r20, r16
    1254:	51 2b       	or	r21, r17
    1256:	62 2b       	or	r22, r18
    1258:	73 2b       	or	r23, r19
    125a:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    125e:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    1262:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    1266:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    126a:	b0 9b       	sbis	0x16, 0	; 22
    126c:	1a c0       	rjmp	.+52     	; 0x12a2 <__vector_15+0x9a>
    126e:	01 96       	adiw	r24, 0x01	; 1
    1270:	09 2e       	mov	r0, r25
    1272:	00 0c       	add	r0, r0
    1274:	aa 0b       	sbc	r26, r26
    1276:	bb 0b       	sbc	r27, r27
    1278:	bc 01       	movw	r22, r24
    127a:	55 27       	eor	r21, r21
    127c:	44 27       	eor	r20, r20
    127e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1282:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1286:	a0 e0       	ldi	r26, 0x00	; 0
    1288:	b0 e0       	ldi	r27, 0x00	; 0
    128a:	84 2b       	or	r24, r20
    128c:	95 2b       	or	r25, r21
    128e:	a6 2b       	or	r26, r22
    1290:	b7 2b       	or	r27, r23
    1292:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    1296:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    129a:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    129e:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    12a2:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x14>
    12a6:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x15>
    12aa:	30 97       	sbiw	r30, 0x00	; 0
    12ac:	39 f0       	breq	.+14     	; 0x12bc <__vector_15+0xb4>
    12ae:	6a e0       	ldi	r22, 0x0A	; 10
    12b0:	70 e0       	ldi	r23, 0x00	; 0
    12b2:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x14>
    12b6:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x15>
    12ba:	09 95       	icall
    12bc:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    12c0:	ff 91       	pop	r31
    12c2:	ef 91       	pop	r30
    12c4:	bf 91       	pop	r27
    12c6:	af 91       	pop	r26
    12c8:	9f 91       	pop	r25
    12ca:	8f 91       	pop	r24
    12cc:	7f 91       	pop	r23
    12ce:	6f 91       	pop	r22
    12d0:	5f 91       	pop	r21
    12d2:	4f 91       	pop	r20
    12d4:	3f 91       	pop	r19
    12d6:	2f 91       	pop	r18
    12d8:	1f 91       	pop	r17
    12da:	0f 91       	pop	r16
    12dc:	0f 90       	pop	r0
    12de:	0f be       	out	0x3f, r0	; 63
    12e0:	0f 90       	pop	r0
    12e2:	1f 90       	pop	r1
    12e4:	18 95       	reti

000012e6 <__vector_16>:
    12e6:	1f 92       	push	r1
    12e8:	0f 92       	push	r0
    12ea:	0f b6       	in	r0, 0x3f	; 63
    12ec:	0f 92       	push	r0
    12ee:	11 24       	eor	r1, r1
    12f0:	0f 93       	push	r16
    12f2:	1f 93       	push	r17
    12f4:	2f 93       	push	r18
    12f6:	3f 93       	push	r19
    12f8:	4f 93       	push	r20
    12fa:	5f 93       	push	r21
    12fc:	6f 93       	push	r22
    12fe:	7f 93       	push	r23
    1300:	8f 93       	push	r24
    1302:	9f 93       	push	r25
    1304:	af 93       	push	r26
    1306:	bf 93       	push	r27
    1308:	ef 93       	push	r30
    130a:	ff 93       	push	r31
    130c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1310:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    1314:	ac 01       	movw	r20, r24
    1316:	09 2e       	mov	r0, r25
    1318:	00 0c       	add	r0, r0
    131a:	66 0b       	sbc	r22, r22
    131c:	77 0b       	sbc	r23, r23
    131e:	9a 01       	movw	r18, r20
    1320:	11 27       	eor	r17, r17
    1322:	00 27       	eor	r16, r16
    1324:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1328:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    132c:	60 e0       	ldi	r22, 0x00	; 0
    132e:	70 e0       	ldi	r23, 0x00	; 0
    1330:	40 2b       	or	r20, r16
    1332:	51 2b       	or	r21, r17
    1334:	62 2b       	or	r22, r18
    1336:	73 2b       	or	r23, r19
    1338:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    133c:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    1340:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    1344:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    1348:	b0 9b       	sbis	0x16, 0	; 22
    134a:	1a c0       	rjmp	.+52     	; 0x1380 <__vector_16+0x9a>
    134c:	01 96       	adiw	r24, 0x01	; 1
    134e:	09 2e       	mov	r0, r25
    1350:	00 0c       	add	r0, r0
    1352:	aa 0b       	sbc	r26, r26
    1354:	bb 0b       	sbc	r27, r27
    1356:	bc 01       	movw	r22, r24
    1358:	55 27       	eor	r21, r21
    135a:	44 27       	eor	r20, r20
    135c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1360:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1364:	a0 e0       	ldi	r26, 0x00	; 0
    1366:	b0 e0       	ldi	r27, 0x00	; 0
    1368:	84 2b       	or	r24, r20
    136a:	95 2b       	or	r25, r21
    136c:	a6 2b       	or	r26, r22
    136e:	b7 2b       	or	r27, r23
    1370:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    1374:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    1378:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    137c:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    1380:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x16>
    1384:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x17>
    1388:	30 97       	sbiw	r30, 0x00	; 0
    138a:	39 f0       	breq	.+14     	; 0x139a <__vector_16+0xb4>
    138c:	6b e0       	ldi	r22, 0x0B	; 11
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x16>
    1394:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x17>
    1398:	09 95       	icall
    139a:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    139e:	ff 91       	pop	r31
    13a0:	ef 91       	pop	r30
    13a2:	bf 91       	pop	r27
    13a4:	af 91       	pop	r26
    13a6:	9f 91       	pop	r25
    13a8:	8f 91       	pop	r24
    13aa:	7f 91       	pop	r23
    13ac:	6f 91       	pop	r22
    13ae:	5f 91       	pop	r21
    13b0:	4f 91       	pop	r20
    13b2:	3f 91       	pop	r19
    13b4:	2f 91       	pop	r18
    13b6:	1f 91       	pop	r17
    13b8:	0f 91       	pop	r16
    13ba:	0f 90       	pop	r0
    13bc:	0f be       	out	0x3f, r0	; 63
    13be:	0f 90       	pop	r0
    13c0:	1f 90       	pop	r1
    13c2:	18 95       	reti

000013c4 <__vector_17>:
    13c4:	1f 92       	push	r1
    13c6:	0f 92       	push	r0
    13c8:	0f b6       	in	r0, 0x3f	; 63
    13ca:	0f 92       	push	r0
    13cc:	11 24       	eor	r1, r1
    13ce:	0f 93       	push	r16
    13d0:	1f 93       	push	r17
    13d2:	2f 93       	push	r18
    13d4:	3f 93       	push	r19
    13d6:	4f 93       	push	r20
    13d8:	5f 93       	push	r21
    13da:	6f 93       	push	r22
    13dc:	7f 93       	push	r23
    13de:	8f 93       	push	r24
    13e0:	9f 93       	push	r25
    13e2:	af 93       	push	r26
    13e4:	bf 93       	push	r27
    13e6:	ef 93       	push	r30
    13e8:	ff 93       	push	r31
    13ea:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    13ee:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    13f2:	ac 01       	movw	r20, r24
    13f4:	09 2e       	mov	r0, r25
    13f6:	00 0c       	add	r0, r0
    13f8:	66 0b       	sbc	r22, r22
    13fa:	77 0b       	sbc	r23, r23
    13fc:	9a 01       	movw	r18, r20
    13fe:	11 27       	eor	r17, r17
    1400:	00 27       	eor	r16, r16
    1402:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1406:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    140a:	60 e0       	ldi	r22, 0x00	; 0
    140c:	70 e0       	ldi	r23, 0x00	; 0
    140e:	40 2b       	or	r20, r16
    1410:	51 2b       	or	r21, r17
    1412:	62 2b       	or	r22, r18
    1414:	73 2b       	or	r23, r19
    1416:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    141a:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    141e:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    1422:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    1426:	b0 9b       	sbis	0x16, 0	; 22
    1428:	1a c0       	rjmp	.+52     	; 0x145e <__vector_17+0x9a>
    142a:	01 96       	adiw	r24, 0x01	; 1
    142c:	09 2e       	mov	r0, r25
    142e:	00 0c       	add	r0, r0
    1430:	aa 0b       	sbc	r26, r26
    1432:	bb 0b       	sbc	r27, r27
    1434:	bc 01       	movw	r22, r24
    1436:	55 27       	eor	r21, r21
    1438:	44 27       	eor	r20, r20
    143a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    143e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1442:	a0 e0       	ldi	r26, 0x00	; 0
    1444:	b0 e0       	ldi	r27, 0x00	; 0
    1446:	84 2b       	or	r24, r20
    1448:	95 2b       	or	r25, r21
    144a:	a6 2b       	or	r26, r22
    144c:	b7 2b       	or	r27, r23
    144e:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    1452:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    1456:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    145a:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    145e:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x18>
    1462:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x19>
    1466:	30 97       	sbiw	r30, 0x00	; 0
    1468:	39 f0       	breq	.+14     	; 0x1478 <__vector_17+0xb4>
    146a:	6c e0       	ldi	r22, 0x0C	; 12
    146c:	70 e0       	ldi	r23, 0x00	; 0
    146e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x18>
    1472:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x19>
    1476:	09 95       	icall
    1478:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    147c:	ff 91       	pop	r31
    147e:	ef 91       	pop	r30
    1480:	bf 91       	pop	r27
    1482:	af 91       	pop	r26
    1484:	9f 91       	pop	r25
    1486:	8f 91       	pop	r24
    1488:	7f 91       	pop	r23
    148a:	6f 91       	pop	r22
    148c:	5f 91       	pop	r21
    148e:	4f 91       	pop	r20
    1490:	3f 91       	pop	r19
    1492:	2f 91       	pop	r18
    1494:	1f 91       	pop	r17
    1496:	0f 91       	pop	r16
    1498:	0f 90       	pop	r0
    149a:	0f be       	out	0x3f, r0	; 63
    149c:	0f 90       	pop	r0
    149e:	1f 90       	pop	r1
    14a0:	18 95       	reti

000014a2 <__vector_18>:
    14a2:	1f 92       	push	r1
    14a4:	0f 92       	push	r0
    14a6:	0f b6       	in	r0, 0x3f	; 63
    14a8:	0f 92       	push	r0
    14aa:	11 24       	eor	r1, r1
    14ac:	0f 93       	push	r16
    14ae:	1f 93       	push	r17
    14b0:	2f 93       	push	r18
    14b2:	3f 93       	push	r19
    14b4:	4f 93       	push	r20
    14b6:	5f 93       	push	r21
    14b8:	6f 93       	push	r22
    14ba:	7f 93       	push	r23
    14bc:	8f 93       	push	r24
    14be:	9f 93       	push	r25
    14c0:	af 93       	push	r26
    14c2:	bf 93       	push	r27
    14c4:	ef 93       	push	r30
    14c6:	ff 93       	push	r31
    14c8:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    14cc:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    14d0:	ac 01       	movw	r20, r24
    14d2:	09 2e       	mov	r0, r25
    14d4:	00 0c       	add	r0, r0
    14d6:	66 0b       	sbc	r22, r22
    14d8:	77 0b       	sbc	r23, r23
    14da:	9a 01       	movw	r18, r20
    14dc:	11 27       	eor	r17, r17
    14de:	00 27       	eor	r16, r16
    14e0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14e4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14e8:	60 e0       	ldi	r22, 0x00	; 0
    14ea:	70 e0       	ldi	r23, 0x00	; 0
    14ec:	40 2b       	or	r20, r16
    14ee:	51 2b       	or	r21, r17
    14f0:	62 2b       	or	r22, r18
    14f2:	73 2b       	or	r23, r19
    14f4:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    14f8:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    14fc:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    1500:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    1504:	b0 9b       	sbis	0x16, 0	; 22
    1506:	1a c0       	rjmp	.+52     	; 0x153c <__vector_18+0x9a>
    1508:	01 96       	adiw	r24, 0x01	; 1
    150a:	09 2e       	mov	r0, r25
    150c:	00 0c       	add	r0, r0
    150e:	aa 0b       	sbc	r26, r26
    1510:	bb 0b       	sbc	r27, r27
    1512:	bc 01       	movw	r22, r24
    1514:	55 27       	eor	r21, r21
    1516:	44 27       	eor	r20, r20
    1518:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    151c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1520:	a0 e0       	ldi	r26, 0x00	; 0
    1522:	b0 e0       	ldi	r27, 0x00	; 0
    1524:	84 2b       	or	r24, r20
    1526:	95 2b       	or	r25, r21
    1528:	a6 2b       	or	r26, r22
    152a:	b7 2b       	or	r27, r23
    152c:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    1530:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    1534:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    1538:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    153c:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x1a>
    1540:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x1b>
    1544:	30 97       	sbiw	r30, 0x00	; 0
    1546:	39 f0       	breq	.+14     	; 0x1556 <__vector_18+0xb4>
    1548:	6d e0       	ldi	r22, 0x0D	; 13
    154a:	70 e0       	ldi	r23, 0x00	; 0
    154c:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x1a>
    1550:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x1b>
    1554:	09 95       	icall
    1556:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    155a:	ff 91       	pop	r31
    155c:	ef 91       	pop	r30
    155e:	bf 91       	pop	r27
    1560:	af 91       	pop	r26
    1562:	9f 91       	pop	r25
    1564:	8f 91       	pop	r24
    1566:	7f 91       	pop	r23
    1568:	6f 91       	pop	r22
    156a:	5f 91       	pop	r21
    156c:	4f 91       	pop	r20
    156e:	3f 91       	pop	r19
    1570:	2f 91       	pop	r18
    1572:	1f 91       	pop	r17
    1574:	0f 91       	pop	r16
    1576:	0f 90       	pop	r0
    1578:	0f be       	out	0x3f, r0	; 63
    157a:	0f 90       	pop	r0
    157c:	1f 90       	pop	r1
    157e:	18 95       	reti

00001580 <__vector_19>:
    1580:	1f 92       	push	r1
    1582:	0f 92       	push	r0
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	0f 92       	push	r0
    1588:	11 24       	eor	r1, r1
    158a:	0f 93       	push	r16
    158c:	1f 93       	push	r17
    158e:	2f 93       	push	r18
    1590:	3f 93       	push	r19
    1592:	4f 93       	push	r20
    1594:	5f 93       	push	r21
    1596:	6f 93       	push	r22
    1598:	7f 93       	push	r23
    159a:	8f 93       	push	r24
    159c:	9f 93       	push	r25
    159e:	af 93       	push	r26
    15a0:	bf 93       	push	r27
    15a2:	ef 93       	push	r30
    15a4:	ff 93       	push	r31
    15a6:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    15aa:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    15ae:	ac 01       	movw	r20, r24
    15b0:	09 2e       	mov	r0, r25
    15b2:	00 0c       	add	r0, r0
    15b4:	66 0b       	sbc	r22, r22
    15b6:	77 0b       	sbc	r23, r23
    15b8:	9a 01       	movw	r18, r20
    15ba:	11 27       	eor	r17, r17
    15bc:	00 27       	eor	r16, r16
    15be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15c6:	60 e0       	ldi	r22, 0x00	; 0
    15c8:	70 e0       	ldi	r23, 0x00	; 0
    15ca:	40 2b       	or	r20, r16
    15cc:	51 2b       	or	r21, r17
    15ce:	62 2b       	or	r22, r18
    15d0:	73 2b       	or	r23, r19
    15d2:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    15d6:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    15da:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    15de:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    15e2:	b0 9b       	sbis	0x16, 0	; 22
    15e4:	1a c0       	rjmp	.+52     	; 0x161a <__vector_19+0x9a>
    15e6:	01 96       	adiw	r24, 0x01	; 1
    15e8:	09 2e       	mov	r0, r25
    15ea:	00 0c       	add	r0, r0
    15ec:	aa 0b       	sbc	r26, r26
    15ee:	bb 0b       	sbc	r27, r27
    15f0:	bc 01       	movw	r22, r24
    15f2:	55 27       	eor	r21, r21
    15f4:	44 27       	eor	r20, r20
    15f6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15fa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15fe:	a0 e0       	ldi	r26, 0x00	; 0
    1600:	b0 e0       	ldi	r27, 0x00	; 0
    1602:	84 2b       	or	r24, r20
    1604:	95 2b       	or	r25, r21
    1606:	a6 2b       	or	r26, r22
    1608:	b7 2b       	or	r27, r23
    160a:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    160e:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    1612:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    1616:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    161a:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x1c>
    161e:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x1d>
    1622:	30 97       	sbiw	r30, 0x00	; 0
    1624:	39 f0       	breq	.+14     	; 0x1634 <__vector_19+0xb4>
    1626:	6e e0       	ldi	r22, 0x0E	; 14
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x1c>
    162e:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x1d>
    1632:	09 95       	icall
    1634:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    1638:	ff 91       	pop	r31
    163a:	ef 91       	pop	r30
    163c:	bf 91       	pop	r27
    163e:	af 91       	pop	r26
    1640:	9f 91       	pop	r25
    1642:	8f 91       	pop	r24
    1644:	7f 91       	pop	r23
    1646:	6f 91       	pop	r22
    1648:	5f 91       	pop	r21
    164a:	4f 91       	pop	r20
    164c:	3f 91       	pop	r19
    164e:	2f 91       	pop	r18
    1650:	1f 91       	pop	r17
    1652:	0f 91       	pop	r16
    1654:	0f 90       	pop	r0
    1656:	0f be       	out	0x3f, r0	; 63
    1658:	0f 90       	pop	r0
    165a:	1f 90       	pop	r1
    165c:	18 95       	reti

0000165e <__vector_20>:
    165e:	1f 92       	push	r1
    1660:	0f 92       	push	r0
    1662:	0f b6       	in	r0, 0x3f	; 63
    1664:	0f 92       	push	r0
    1666:	11 24       	eor	r1, r1
    1668:	0f 93       	push	r16
    166a:	1f 93       	push	r17
    166c:	2f 93       	push	r18
    166e:	3f 93       	push	r19
    1670:	4f 93       	push	r20
    1672:	5f 93       	push	r21
    1674:	6f 93       	push	r22
    1676:	7f 93       	push	r23
    1678:	8f 93       	push	r24
    167a:	9f 93       	push	r25
    167c:	af 93       	push	r26
    167e:	bf 93       	push	r27
    1680:	ef 93       	push	r30
    1682:	ff 93       	push	r31
    1684:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1688:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    168c:	ac 01       	movw	r20, r24
    168e:	09 2e       	mov	r0, r25
    1690:	00 0c       	add	r0, r0
    1692:	66 0b       	sbc	r22, r22
    1694:	77 0b       	sbc	r23, r23
    1696:	9a 01       	movw	r18, r20
    1698:	11 27       	eor	r17, r17
    169a:	00 27       	eor	r16, r16
    169c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	70 e0       	ldi	r23, 0x00	; 0
    16a8:	40 2b       	or	r20, r16
    16aa:	51 2b       	or	r21, r17
    16ac:	62 2b       	or	r22, r18
    16ae:	73 2b       	or	r23, r19
    16b0:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    16b4:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    16b8:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    16bc:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    16c0:	b0 9b       	sbis	0x16, 0	; 22
    16c2:	1a c0       	rjmp	.+52     	; 0x16f8 <__vector_20+0x9a>
    16c4:	01 96       	adiw	r24, 0x01	; 1
    16c6:	09 2e       	mov	r0, r25
    16c8:	00 0c       	add	r0, r0
    16ca:	aa 0b       	sbc	r26, r26
    16cc:	bb 0b       	sbc	r27, r27
    16ce:	bc 01       	movw	r22, r24
    16d0:	55 27       	eor	r21, r21
    16d2:	44 27       	eor	r20, r20
    16d4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16d8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16dc:	a0 e0       	ldi	r26, 0x00	; 0
    16de:	b0 e0       	ldi	r27, 0x00	; 0
    16e0:	84 2b       	or	r24, r20
    16e2:	95 2b       	or	r25, r21
    16e4:	a6 2b       	or	r26, r22
    16e6:	b7 2b       	or	r27, r23
    16e8:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    16ec:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    16f0:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    16f4:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    16f8:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x1e>
    16fc:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x1f>
    1700:	30 97       	sbiw	r30, 0x00	; 0
    1702:	39 f0       	breq	.+14     	; 0x1712 <__vector_20+0xb4>
    1704:	6f e0       	ldi	r22, 0x0F	; 15
    1706:	70 e0       	ldi	r23, 0x00	; 0
    1708:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x1e>
    170c:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x1f>
    1710:	09 95       	icall
    1712:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    1716:	ff 91       	pop	r31
    1718:	ef 91       	pop	r30
    171a:	bf 91       	pop	r27
    171c:	af 91       	pop	r26
    171e:	9f 91       	pop	r25
    1720:	8f 91       	pop	r24
    1722:	7f 91       	pop	r23
    1724:	6f 91       	pop	r22
    1726:	5f 91       	pop	r21
    1728:	4f 91       	pop	r20
    172a:	3f 91       	pop	r19
    172c:	2f 91       	pop	r18
    172e:	1f 91       	pop	r17
    1730:	0f 91       	pop	r16
    1732:	0f 90       	pop	r0
    1734:	0f be       	out	0x3f, r0	; 63
    1736:	0f 90       	pop	r0
    1738:	1f 90       	pop	r1
    173a:	18 95       	reti

0000173c <__vector_21>:
    173c:	1f 92       	push	r1
    173e:	0f 92       	push	r0
    1740:	0f b6       	in	r0, 0x3f	; 63
    1742:	0f 92       	push	r0
    1744:	11 24       	eor	r1, r1
    1746:	0f 93       	push	r16
    1748:	1f 93       	push	r17
    174a:	2f 93       	push	r18
    174c:	3f 93       	push	r19
    174e:	4f 93       	push	r20
    1750:	5f 93       	push	r21
    1752:	6f 93       	push	r22
    1754:	7f 93       	push	r23
    1756:	8f 93       	push	r24
    1758:	9f 93       	push	r25
    175a:	af 93       	push	r26
    175c:	bf 93       	push	r27
    175e:	ef 93       	push	r30
    1760:	ff 93       	push	r31
    1762:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1766:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    176a:	ac 01       	movw	r20, r24
    176c:	09 2e       	mov	r0, r25
    176e:	00 0c       	add	r0, r0
    1770:	66 0b       	sbc	r22, r22
    1772:	77 0b       	sbc	r23, r23
    1774:	9a 01       	movw	r18, r20
    1776:	11 27       	eor	r17, r17
    1778:	00 27       	eor	r16, r16
    177a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    177e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1782:	60 e0       	ldi	r22, 0x00	; 0
    1784:	70 e0       	ldi	r23, 0x00	; 0
    1786:	40 2b       	or	r20, r16
    1788:	51 2b       	or	r21, r17
    178a:	62 2b       	or	r22, r18
    178c:	73 2b       	or	r23, r19
    178e:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    1792:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    1796:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    179a:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    179e:	b0 9b       	sbis	0x16, 0	; 22
    17a0:	1a c0       	rjmp	.+52     	; 0x17d6 <__vector_21+0x9a>
    17a2:	01 96       	adiw	r24, 0x01	; 1
    17a4:	09 2e       	mov	r0, r25
    17a6:	00 0c       	add	r0, r0
    17a8:	aa 0b       	sbc	r26, r26
    17aa:	bb 0b       	sbc	r27, r27
    17ac:	bc 01       	movw	r22, r24
    17ae:	55 27       	eor	r21, r21
    17b0:	44 27       	eor	r20, r20
    17b2:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    17b6:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    17ba:	a0 e0       	ldi	r26, 0x00	; 0
    17bc:	b0 e0       	ldi	r27, 0x00	; 0
    17be:	84 2b       	or	r24, r20
    17c0:	95 2b       	or	r25, r21
    17c2:	a6 2b       	or	r26, r22
    17c4:	b7 2b       	or	r27, r23
    17c6:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    17ca:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    17ce:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    17d2:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    17d6:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x20>
    17da:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x21>
    17de:	30 97       	sbiw	r30, 0x00	; 0
    17e0:	39 f0       	breq	.+14     	; 0x17f0 <__vector_21+0xb4>
    17e2:	60 e1       	ldi	r22, 0x10	; 16
    17e4:	70 e0       	ldi	r23, 0x00	; 0
    17e6:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x20>
    17ea:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x21>
    17ee:	09 95       	icall
    17f0:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    17f4:	ff 91       	pop	r31
    17f6:	ef 91       	pop	r30
    17f8:	bf 91       	pop	r27
    17fa:	af 91       	pop	r26
    17fc:	9f 91       	pop	r25
    17fe:	8f 91       	pop	r24
    1800:	7f 91       	pop	r23
    1802:	6f 91       	pop	r22
    1804:	5f 91       	pop	r21
    1806:	4f 91       	pop	r20
    1808:	3f 91       	pop	r19
    180a:	2f 91       	pop	r18
    180c:	1f 91       	pop	r17
    180e:	0f 91       	pop	r16
    1810:	0f 90       	pop	r0
    1812:	0f be       	out	0x3f, r0	; 63
    1814:	0f 90       	pop	r0
    1816:	1f 90       	pop	r1
    1818:	18 95       	reti

0000181a <__vector_22>:
    181a:	1f 92       	push	r1
    181c:	0f 92       	push	r0
    181e:	0f b6       	in	r0, 0x3f	; 63
    1820:	0f 92       	push	r0
    1822:	11 24       	eor	r1, r1
    1824:	0f 93       	push	r16
    1826:	1f 93       	push	r17
    1828:	2f 93       	push	r18
    182a:	3f 93       	push	r19
    182c:	4f 93       	push	r20
    182e:	5f 93       	push	r21
    1830:	6f 93       	push	r22
    1832:	7f 93       	push	r23
    1834:	8f 93       	push	r24
    1836:	9f 93       	push	r25
    1838:	af 93       	push	r26
    183a:	bf 93       	push	r27
    183c:	ef 93       	push	r30
    183e:	ff 93       	push	r31
    1840:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1844:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    1848:	ac 01       	movw	r20, r24
    184a:	09 2e       	mov	r0, r25
    184c:	00 0c       	add	r0, r0
    184e:	66 0b       	sbc	r22, r22
    1850:	77 0b       	sbc	r23, r23
    1852:	9a 01       	movw	r18, r20
    1854:	11 27       	eor	r17, r17
    1856:	00 27       	eor	r16, r16
    1858:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    185c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1860:	60 e0       	ldi	r22, 0x00	; 0
    1862:	70 e0       	ldi	r23, 0x00	; 0
    1864:	40 2b       	or	r20, r16
    1866:	51 2b       	or	r21, r17
    1868:	62 2b       	or	r22, r18
    186a:	73 2b       	or	r23, r19
    186c:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <timestamp>
    1870:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <timestamp+0x1>
    1874:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <timestamp+0x2>
    1878:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <timestamp+0x3>
    187c:	b0 9b       	sbis	0x16, 0	; 22
    187e:	1a c0       	rjmp	.+52     	; 0x18b4 <__vector_22+0x9a>
    1880:	01 96       	adiw	r24, 0x01	; 1
    1882:	09 2e       	mov	r0, r25
    1884:	00 0c       	add	r0, r0
    1886:	aa 0b       	sbc	r26, r26
    1888:	bb 0b       	sbc	r27, r27
    188a:	bc 01       	movw	r22, r24
    188c:	55 27       	eor	r21, r21
    188e:	44 27       	eor	r20, r20
    1890:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1894:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1898:	a0 e0       	ldi	r26, 0x00	; 0
    189a:	b0 e0       	ldi	r27, 0x00	; 0
    189c:	84 2b       	or	r24, r20
    189e:	95 2b       	or	r25, r21
    18a0:	a6 2b       	or	r26, r22
    18a2:	b7 2b       	or	r27, r23
    18a4:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <timestamp>
    18a8:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <timestamp+0x1>
    18ac:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <timestamp+0x2>
    18b0:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <timestamp+0x3>
    18b4:	e0 91 16 02 	lds	r30, 0x0216	; 0x800216 <mtable+0x22>
    18b8:	f0 91 17 02 	lds	r31, 0x0217	; 0x800217 <mtable+0x23>
    18bc:	30 97       	sbiw	r30, 0x00	; 0
    18be:	39 f0       	breq	.+14     	; 0x18ce <__vector_22+0xb4>
    18c0:	61 e1       	ldi	r22, 0x11	; 17
    18c2:	70 e0       	ldi	r23, 0x00	; 0
    18c4:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <otable+0x22>
    18c8:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <otable+0x23>
    18cc:	09 95       	icall
    18ce:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    18d2:	ff 91       	pop	r31
    18d4:	ef 91       	pop	r30
    18d6:	bf 91       	pop	r27
    18d8:	af 91       	pop	r26
    18da:	9f 91       	pop	r25
    18dc:	8f 91       	pop	r24
    18de:	7f 91       	pop	r23
    18e0:	6f 91       	pop	r22
    18e2:	5f 91       	pop	r21
    18e4:	4f 91       	pop	r20
    18e6:	3f 91       	pop	r19
    18e8:	2f 91       	pop	r18
    18ea:	1f 91       	pop	r17
    18ec:	0f 91       	pop	r16
    18ee:	0f 90       	pop	r0
    18f0:	0f be       	out	0x3f, r0	; 63
    18f2:	0f 90       	pop	r0
    18f4:	1f 90       	pop	r1
    18f6:	18 95       	reti

000018f8 <idle>:
    18f8:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    18fc:	78 94       	sei
    18fe:	81 e0       	ldi	r24, 0x01	; 1
    1900:	83 bf       	out	0x33, r24	; 51
    1902:	88 95       	sleep
    1904:	fc cf       	rjmp	.-8      	; 0x18fe <idle+0x6>

00001906 <__vector_9>:
    1906:	1f 92       	push	r1
    1908:	0f 92       	push	r0
    190a:	0f b6       	in	r0, 0x3f	; 63
    190c:	0f 92       	push	r0
    190e:	11 24       	eor	r1, r1
    1910:	2f 93       	push	r18
    1912:	3f 93       	push	r19
    1914:	4f 93       	push	r20
    1916:	5f 93       	push	r21
    1918:	6f 93       	push	r22
    191a:	7f 93       	push	r23
    191c:	8f 93       	push	r24
    191e:	9f 93       	push	r25
    1920:	ef 93       	push	r30
    1922:	ff 93       	push	r31
    1924:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    1928:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    192c:	01 96       	adiw	r24, 0x01	; 1
    192e:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <overflows+0x1>
    1932:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <overflows>
    1936:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <timerQ>
    193a:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <timerQ+0x1>
    193e:	30 97       	sbiw	r30, 0x00	; 0
    1940:	01 f1       	breq	.+64     	; 0x1982 <__vector_9+0x7c>
    1942:	42 81       	ldd	r20, Z+2	; 0x02
    1944:	53 81       	ldd	r21, Z+3	; 0x03
    1946:	64 81       	ldd	r22, Z+4	; 0x04
    1948:	75 81       	ldd	r23, Z+5	; 0x05
    194a:	86 17       	cp	r24, r22
    194c:	97 07       	cpc	r25, r23
    194e:	c9 f4       	brne	.+50     	; 0x1982 <__vector_9+0x7c>
    1950:	ca 01       	movw	r24, r20
    1952:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1956:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    195a:	42 1b       	sub	r20, r18
    195c:	53 0b       	sbc	r21, r19
    195e:	41 30       	cpi	r20, 0x01	; 1
    1960:	51 05       	cpc	r21, r1
    1962:	29 f4       	brne	.+10     	; 0x196e <__vector_9+0x68>
    1964:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1968:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    196c:	01 96       	adiw	r24, 0x01	; 1
    196e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1972:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1976:	ef e6       	ldi	r30, 0x6F	; 111
    1978:	f0 e0       	ldi	r31, 0x00	; 0
    197a:	80 81       	ld	r24, Z
    197c:	82 60       	ori	r24, 0x02	; 2
    197e:	80 83       	st	Z, r24
    1980:	05 c0       	rjmp	.+10     	; 0x198c <__vector_9+0x86>
    1982:	ef e6       	ldi	r30, 0x6F	; 111
    1984:	f0 e0       	ldi	r31, 0x00	; 0
    1986:	80 81       	ld	r24, Z
    1988:	8d 7f       	andi	r24, 0xFD	; 253
    198a:	80 83       	st	Z, r24
    198c:	ff 91       	pop	r31
    198e:	ef 91       	pop	r30
    1990:	9f 91       	pop	r25
    1992:	8f 91       	pop	r24
    1994:	7f 91       	pop	r23
    1996:	6f 91       	pop	r22
    1998:	5f 91       	pop	r21
    199a:	4f 91       	pop	r20
    199c:	3f 91       	pop	r19
    199e:	2f 91       	pop	r18
    19a0:	0f 90       	pop	r0
    19a2:	0f be       	out	0x3f, r0	; 63
    19a4:	0f 90       	pop	r0
    19a6:	1f 90       	pop	r1
    19a8:	18 95       	reti

000019aa <__vector_7>:
    19aa:	1f 92       	push	r1
    19ac:	0f 92       	push	r0
    19ae:	0f b6       	in	r0, 0x3f	; 63
    19b0:	0f 92       	push	r0
    19b2:	11 24       	eor	r1, r1
    19b4:	cf 92       	push	r12
    19b6:	df 92       	push	r13
    19b8:	ef 92       	push	r14
    19ba:	ff 92       	push	r15
    19bc:	2f 93       	push	r18
    19be:	3f 93       	push	r19
    19c0:	4f 93       	push	r20
    19c2:	5f 93       	push	r21
    19c4:	6f 93       	push	r22
    19c6:	7f 93       	push	r23
    19c8:	8f 93       	push	r24
    19ca:	9f 93       	push	r25
    19cc:	af 93       	push	r26
    19ce:	bf 93       	push	r27
    19d0:	ef 93       	push	r30
    19d2:	ff 93       	push	r31
    19d4:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <overflows>
    19d8:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <overflows+0x1>
    19dc:	6c 01       	movw	r12, r24
    19de:	09 2e       	mov	r0, r25
    19e0:	00 0c       	add	r0, r0
    19e2:	ee 08       	sbc	r14, r14
    19e4:	ff 08       	sbc	r15, r15
    19e6:	76 01       	movw	r14, r12
    19e8:	dd 24       	eor	r13, r13
    19ea:	cc 24       	eor	r12, r12
    19ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19f4:	60 e0       	ldi	r22, 0x00	; 0
    19f6:	70 e0       	ldi	r23, 0x00	; 0
    19f8:	c4 2a       	or	r12, r20
    19fa:	d5 2a       	or	r13, r21
    19fc:	e6 2a       	or	r14, r22
    19fe:	f7 2a       	or	r15, r23
    1a00:	b0 9b       	sbis	0x16, 0	; 22
    1a02:	1e c0       	rjmp	.+60     	; 0x1a40 <__vector_7+0x96>
    1a04:	6c 01       	movw	r12, r24
    1a06:	2f ef       	ldi	r18, 0xFF	; 255
    1a08:	c2 1a       	sub	r12, r18
    1a0a:	d2 0a       	sbc	r13, r18
    1a0c:	0d 2c       	mov	r0, r13
    1a0e:	00 0c       	add	r0, r0
    1a10:	ee 08       	sbc	r14, r14
    1a12:	ff 08       	sbc	r15, r15
    1a14:	d6 01       	movw	r26, r12
    1a16:	99 27       	eor	r25, r25
    1a18:	88 27       	eor	r24, r24
    1a1a:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a1e:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a22:	e1 2c       	mov	r14, r1
    1a24:	f1 2c       	mov	r15, r1
    1a26:	c8 2a       	or	r12, r24
    1a28:	d9 2a       	or	r13, r25
    1a2a:	ea 2a       	or	r14, r26
    1a2c:	fb 2a       	or	r15, r27
    1a2e:	08 c0       	rjmp	.+16     	; 0x1a40 <__vector_7+0x96>
    1a30:	88 e5       	ldi	r24, 0x58	; 88
    1a32:	91 e0       	ldi	r25, 0x01	; 1
    1a34:	0e 94 45 04 	call	0x88a	; 0x88a <dequeue>
    1a38:	6a e5       	ldi	r22, 0x5A	; 90
    1a3a:	71 e0       	ldi	r23, 0x01	; 1
    1a3c:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <enqueueByDeadline>
    1a40:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <timerQ>
    1a44:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <timerQ+0x1>
    1a48:	30 97       	sbiw	r30, 0x00	; 0
    1a4a:	69 f0       	breq	.+26     	; 0x1a66 <__vector_7+0xbc>
    1a4c:	82 81       	ldd	r24, Z+2	; 0x02
    1a4e:	93 81       	ldd	r25, Z+3	; 0x03
    1a50:	a4 81       	ldd	r26, Z+4	; 0x04
    1a52:	b5 81       	ldd	r27, Z+5	; 0x05
    1a54:	8c 19       	sub	r24, r12
    1a56:	9d 09       	sbc	r25, r13
    1a58:	ae 09       	sbc	r26, r14
    1a5a:	bf 09       	sbc	r27, r15
    1a5c:	18 16       	cp	r1, r24
    1a5e:	19 06       	cpc	r1, r25
    1a60:	1a 06       	cpc	r1, r26
    1a62:	1b 06       	cpc	r1, r27
    1a64:	2c f7       	brge	.-54     	; 0x1a30 <__vector_7+0x86>
    1a66:	30 97       	sbiw	r30, 0x00	; 0
    1a68:	21 f1       	breq	.+72     	; 0x1ab2 <__vector_7+0x108>
    1a6a:	82 81       	ldd	r24, Z+2	; 0x02
    1a6c:	93 81       	ldd	r25, Z+3	; 0x03
    1a6e:	a4 81       	ldd	r26, Z+4	; 0x04
    1a70:	b5 81       	ldd	r27, Z+5	; 0x05
    1a72:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <overflows>
    1a76:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <overflows+0x1>
    1a7a:	2a 17       	cp	r18, r26
    1a7c:	3b 07       	cpc	r19, r27
    1a7e:	c9 f4       	brne	.+50     	; 0x1ab2 <__vector_7+0x108>
    1a80:	9c 01       	movw	r18, r24
    1a82:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a86:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a8a:	84 1b       	sub	r24, r20
    1a8c:	95 0b       	sbc	r25, r21
    1a8e:	01 97       	sbiw	r24, 0x01	; 1
    1a90:	31 f4       	brne	.+12     	; 0x1a9e <__vector_7+0xf4>
    1a92:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a96:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a9a:	2f 5f       	subi	r18, 0xFF	; 255
    1a9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a9e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1aa2:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1aa6:	ef e6       	ldi	r30, 0x6F	; 111
    1aa8:	f0 e0       	ldi	r31, 0x00	; 0
    1aaa:	80 81       	ld	r24, Z
    1aac:	82 60       	ori	r24, 0x02	; 2
    1aae:	80 83       	st	Z, r24
    1ab0:	05 c0       	rjmp	.+10     	; 0x1abc <__vector_7+0x112>
    1ab2:	ef e6       	ldi	r30, 0x6F	; 111
    1ab4:	f0 e0       	ldi	r31, 0x00	; 0
    1ab6:	80 81       	ld	r24, Z
    1ab8:	8d 7f       	andi	r24, 0xFD	; 253
    1aba:	80 83       	st	Z, r24
    1abc:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <schedule>
    1ac0:	ff 91       	pop	r31
    1ac2:	ef 91       	pop	r30
    1ac4:	bf 91       	pop	r27
    1ac6:	af 91       	pop	r26
    1ac8:	9f 91       	pop	r25
    1aca:	8f 91       	pop	r24
    1acc:	7f 91       	pop	r23
    1ace:	6f 91       	pop	r22
    1ad0:	5f 91       	pop	r21
    1ad2:	4f 91       	pop	r20
    1ad4:	3f 91       	pop	r19
    1ad6:	2f 91       	pop	r18
    1ad8:	ff 90       	pop	r15
    1ada:	ef 90       	pop	r14
    1adc:	df 90       	pop	r13
    1ade:	cf 90       	pop	r12
    1ae0:	0f 90       	pop	r0
    1ae2:	0f be       	out	0x3f, r0	; 63
    1ae4:	0f 90       	pop	r0
    1ae6:	1f 90       	pop	r1
    1ae8:	18 95       	reti

00001aea <async>:
    1aea:	3f 92       	push	r3
    1aec:	4f 92       	push	r4
    1aee:	5f 92       	push	r5
    1af0:	6f 92       	push	r6
    1af2:	7f 92       	push	r7
    1af4:	8f 92       	push	r8
    1af6:	9f 92       	push	r9
    1af8:	af 92       	push	r10
    1afa:	bf 92       	push	r11
    1afc:	cf 92       	push	r12
    1afe:	df 92       	push	r13
    1b00:	ef 92       	push	r14
    1b02:	ff 92       	push	r15
    1b04:	0f 93       	push	r16
    1b06:	1f 93       	push	r17
    1b08:	cf 93       	push	r28
    1b0a:	df 93       	push	r29
    1b0c:	2b 01       	movw	r4, r22
    1b0e:	3c 01       	movw	r6, r24
    1b10:	49 01       	movw	r8, r18
    1b12:	5a 01       	movw	r10, r20
    1b14:	8f b7       	in	r24, 0x3f	; 63
    1b16:	80 78       	andi	r24, 0x80	; 128
    1b18:	38 2e       	mov	r3, r24
    1b1a:	f8 94       	cli
    1b1c:	88 e4       	ldi	r24, 0x48	; 72
    1b1e:	91 e0       	ldi	r25, 0x01	; 1
    1b20:	0e 94 45 04 	call	0x88a	; 0x88a <dequeue>
    1b24:	ec 01       	movw	r28, r24
    1b26:	1b 87       	std	Y+11, r17	; 0x0b
    1b28:	0a 87       	std	Y+10, r16	; 0x0a
    1b2a:	fd 86       	std	Y+13, r15	; 0x0d
    1b2c:	ec 86       	std	Y+12, r14	; 0x0c
    1b2e:	df 86       	std	Y+15, r13	; 0x0f
    1b30:	ce 86       	std	Y+14, r12	; 0x0e
    1b32:	33 20       	and	r3, r3
    1b34:	61 f0       	breq	.+24     	; 0x1b4e <async+0x64>
    1b36:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <current>
    1b3a:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <current+0x1>
    1b3e:	02 80       	ldd	r0, Z+2	; 0x02
    1b40:	f3 81       	ldd	r31, Z+3	; 0x03
    1b42:	e0 2d       	mov	r30, r0
    1b44:	82 81       	ldd	r24, Z+2	; 0x02
    1b46:	93 81       	ldd	r25, Z+3	; 0x03
    1b48:	a4 81       	ldd	r26, Z+4	; 0x04
    1b4a:	b5 81       	ldd	r27, Z+5	; 0x05
    1b4c:	08 c0       	rjmp	.+16     	; 0x1b5e <async+0x74>
    1b4e:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <timestamp>
    1b52:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <timestamp+0x1>
    1b56:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <timestamp+0x2>
    1b5a:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <timestamp+0x3>
    1b5e:	48 0e       	add	r4, r24
    1b60:	59 1e       	adc	r5, r25
    1b62:	6a 1e       	adc	r6, r26
    1b64:	7b 1e       	adc	r7, r27
    1b66:	4a 82       	std	Y+2, r4	; 0x02
    1b68:	5b 82       	std	Y+3, r5	; 0x03
    1b6a:	6c 82       	std	Y+4, r6	; 0x04
    1b6c:	7d 82       	std	Y+5, r7	; 0x05
    1b6e:	18 14       	cp	r1, r8
    1b70:	19 04       	cpc	r1, r9
    1b72:	1a 04       	cpc	r1, r10
    1b74:	1b 04       	cpc	r1, r11
    1b76:	44 f0       	brlt	.+16     	; 0x1b88 <async+0x9e>
    1b78:	0f 2e       	mov	r0, r31
    1b7a:	88 24       	eor	r8, r8
    1b7c:	8a 94       	dec	r8
    1b7e:	98 2c       	mov	r9, r8
    1b80:	a8 2c       	mov	r10, r8
    1b82:	ff e7       	ldi	r31, 0x7F	; 127
    1b84:	bf 2e       	mov	r11, r31
    1b86:	f0 2d       	mov	r31, r0
    1b88:	84 0c       	add	r8, r4
    1b8a:	95 1c       	adc	r9, r5
    1b8c:	a6 1c       	adc	r10, r6
    1b8e:	b7 1c       	adc	r11, r7
    1b90:	8e 82       	std	Y+6, r8	; 0x06
    1b92:	9f 82       	std	Y+7, r9	; 0x07
    1b94:	a8 86       	std	Y+8, r10	; 0x08
    1b96:	b9 86       	std	Y+9, r11	; 0x09
    1b98:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <overflows>
    1b9c:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <overflows+0x1>
    1ba0:	c9 01       	movw	r24, r18
    1ba2:	03 2e       	mov	r0, r19
    1ba4:	00 0c       	add	r0, r0
    1ba6:	aa 0b       	sbc	r26, r26
    1ba8:	bb 0b       	sbc	r27, r27
    1baa:	dc 01       	movw	r26, r24
    1bac:	99 27       	eor	r25, r25
    1bae:	88 27       	eor	r24, r24
    1bb0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bb4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bb8:	60 e0       	ldi	r22, 0x00	; 0
    1bba:	70 e0       	ldi	r23, 0x00	; 0
    1bbc:	84 2b       	or	r24, r20
    1bbe:	95 2b       	or	r25, r21
    1bc0:	a6 2b       	or	r26, r22
    1bc2:	b7 2b       	or	r27, r23
    1bc4:	b0 9b       	sbis	0x16, 0	; 22
    1bc6:	13 c0       	rjmp	.+38     	; 0x1bee <async+0x104>
    1bc8:	c9 01       	movw	r24, r18
    1bca:	01 96       	adiw	r24, 0x01	; 1
    1bcc:	09 2e       	mov	r0, r25
    1bce:	00 0c       	add	r0, r0
    1bd0:	aa 0b       	sbc	r26, r26
    1bd2:	bb 0b       	sbc	r27, r27
    1bd4:	dc 01       	movw	r26, r24
    1bd6:	99 27       	eor	r25, r25
    1bd8:	88 27       	eor	r24, r24
    1bda:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bde:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1be2:	60 e0       	ldi	r22, 0x00	; 0
    1be4:	70 e0       	ldi	r23, 0x00	; 0
    1be6:	84 2b       	or	r24, r20
    1be8:	95 2b       	or	r25, r21
    1bea:	a6 2b       	or	r26, r22
    1bec:	b7 2b       	or	r27, r23
    1bee:	48 1a       	sub	r4, r24
    1bf0:	59 0a       	sbc	r5, r25
    1bf2:	6a 0a       	sbc	r6, r26
    1bf4:	7b 0a       	sbc	r7, r27
    1bf6:	14 14       	cp	r1, r4
    1bf8:	15 04       	cpc	r1, r5
    1bfa:	16 04       	cpc	r1, r6
    1bfc:	17 04       	cpc	r1, r7
    1bfe:	ac f5       	brge	.+106    	; 0x1c6a <async+0x180>
    1c00:	68 e5       	ldi	r22, 0x58	; 88
    1c02:	71 e0       	ldi	r23, 0x01	; 1
    1c04:	ce 01       	movw	r24, r28
    1c06:	0e 94 14 04 	call	0x828	; 0x828 <enqueueByBaseline>
    1c0a:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <timerQ>
    1c0e:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <timerQ+0x1>
    1c12:	30 97       	sbiw	r30, 0x00	; 0
    1c14:	21 f1       	breq	.+72     	; 0x1c5e <async+0x174>
    1c16:	82 81       	ldd	r24, Z+2	; 0x02
    1c18:	93 81       	ldd	r25, Z+3	; 0x03
    1c1a:	a4 81       	ldd	r26, Z+4	; 0x04
    1c1c:	b5 81       	ldd	r27, Z+5	; 0x05
    1c1e:	20 91 52 01 	lds	r18, 0x0152	; 0x800152 <overflows>
    1c22:	30 91 53 01 	lds	r19, 0x0153	; 0x800153 <overflows+0x1>
    1c26:	2a 17       	cp	r18, r26
    1c28:	3b 07       	cpc	r19, r27
    1c2a:	c9 f4       	brne	.+50     	; 0x1c5e <async+0x174>
    1c2c:	9c 01       	movw	r18, r24
    1c2e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c32:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c36:	84 1b       	sub	r24, r20
    1c38:	95 0b       	sbc	r25, r21
    1c3a:	01 97       	sbiw	r24, 0x01	; 1
    1c3c:	31 f4       	brne	.+12     	; 0x1c4a <async+0x160>
    1c3e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c42:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c46:	2f 5f       	subi	r18, 0xFF	; 255
    1c48:	3f 4f       	sbci	r19, 0xFF	; 255
    1c4a:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c4e:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c52:	ef e6       	ldi	r30, 0x6F	; 111
    1c54:	f0 e0       	ldi	r31, 0x00	; 0
    1c56:	80 81       	ld	r24, Z
    1c58:	82 60       	ori	r24, 0x02	; 2
    1c5a:	80 83       	st	Z, r24
    1c5c:	39 c0       	rjmp	.+114    	; 0x1cd0 <async+0x1e6>
    1c5e:	ef e6       	ldi	r30, 0x6F	; 111
    1c60:	f0 e0       	ldi	r31, 0x00	; 0
    1c62:	80 81       	ld	r24, Z
    1c64:	8d 7f       	andi	r24, 0xFD	; 253
    1c66:	80 83       	st	Z, r24
    1c68:	33 c0       	rjmp	.+102    	; 0x1cd0 <async+0x1e6>
    1c6a:	6a e5       	ldi	r22, 0x5A	; 90
    1c6c:	71 e0       	ldi	r23, 0x01	; 1
    1c6e:	ce 01       	movw	r24, r28
    1c70:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <enqueueByDeadline>
    1c74:	33 20       	and	r3, r3
    1c76:	61 f1       	breq	.+88     	; 0x1cd0 <async+0x1e6>
    1c78:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <threadPool>
    1c7c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <threadPool+0x1>
    1c80:	89 2b       	or	r24, r25
    1c82:	31 f1       	breq	.+76     	; 0x1cd0 <async+0x1e6>
    1c84:	e0 91 5a 01 	lds	r30, 0x015A	; 0x80015a <msgQ>
    1c88:	f0 91 5b 01 	lds	r31, 0x015B	; 0x80015b <msgQ+0x1>
    1c8c:	86 81       	ldd	r24, Z+6	; 0x06
    1c8e:	97 81       	ldd	r25, Z+7	; 0x07
    1c90:	a0 85       	ldd	r26, Z+8	; 0x08
    1c92:	b1 85       	ldd	r27, Z+9	; 0x09
    1c94:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <activeStack>
    1c98:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <activeStack+0x1>
    1c9c:	02 80       	ldd	r0, Z+2	; 0x02
    1c9e:	f3 81       	ldd	r31, Z+3	; 0x03
    1ca0:	e0 2d       	mov	r30, r0
    1ca2:	46 81       	ldd	r20, Z+6	; 0x06
    1ca4:	57 81       	ldd	r21, Z+7	; 0x07
    1ca6:	60 85       	ldd	r22, Z+8	; 0x08
    1ca8:	71 85       	ldd	r23, Z+9	; 0x09
    1caa:	84 1b       	sub	r24, r20
    1cac:	95 0b       	sbc	r25, r21
    1cae:	a6 0b       	sbc	r26, r22
    1cb0:	b7 0b       	sbc	r27, r23
    1cb2:	72 f4       	brpl	.+28     	; 0x1cd0 <async+0x1e6>
    1cb4:	86 e4       	ldi	r24, 0x46	; 70
    1cb6:	91 e0       	ldi	r25, 0x01	; 1
    1cb8:	0e 94 70 04 	call	0x8e0	; 0x8e0 <pop>
    1cbc:	64 e4       	ldi	r22, 0x44	; 68
    1cbe:	71 e0       	ldi	r23, 0x01	; 1
    1cc0:	0e 94 66 04 	call	0x8cc	; 0x8cc <push>
    1cc4:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <activeStack>
    1cc8:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <activeStack+0x1>
    1ccc:	0e 94 c3 03 	call	0x786	; 0x786 <dispatch>
    1cd0:	33 20       	and	r3, r3
    1cd2:	09 f0       	breq	.+2      	; 0x1cd6 <async+0x1ec>
    1cd4:	78 94       	sei
    1cd6:	ce 01       	movw	r24, r28
    1cd8:	df 91       	pop	r29
    1cda:	cf 91       	pop	r28
    1cdc:	1f 91       	pop	r17
    1cde:	0f 91       	pop	r16
    1ce0:	ff 90       	pop	r15
    1ce2:	ef 90       	pop	r14
    1ce4:	df 90       	pop	r13
    1ce6:	cf 90       	pop	r12
    1ce8:	bf 90       	pop	r11
    1cea:	af 90       	pop	r10
    1cec:	9f 90       	pop	r9
    1cee:	8f 90       	pop	r8
    1cf0:	7f 90       	pop	r7
    1cf2:	6f 90       	pop	r6
    1cf4:	5f 90       	pop	r5
    1cf6:	4f 90       	pop	r4
    1cf8:	3f 90       	pop	r3
    1cfa:	08 95       	ret

00001cfc <sync>:
    1cfc:	cf 92       	push	r12
    1cfe:	df 92       	push	r13
    1d00:	ef 92       	push	r14
    1d02:	ff 92       	push	r15
    1d04:	0f 93       	push	r16
    1d06:	1f 93       	push	r17
    1d08:	cf 93       	push	r28
    1d0a:	df 93       	push	r29
    1d0c:	ec 01       	movw	r28, r24
    1d0e:	7b 01       	movw	r14, r22
    1d10:	6a 01       	movw	r12, r20
    1d12:	1f b7       	in	r17, 0x3f	; 63
    1d14:	10 78       	andi	r17, 0x80	; 128
    1d16:	f8 94       	cli
    1d18:	a8 81       	ld	r26, Y
    1d1a:	b9 81       	ldd	r27, Y+1	; 0x01
    1d1c:	10 97       	sbiw	r26, 0x00	; 0
    1d1e:	19 f4       	brne	.+6      	; 0x1d26 <sync+0x2a>
    1d20:	35 c0       	rjmp	.+106    	; 0x1d8c <sync+0x90>
    1d22:	a0 81       	ld	r26, Z
    1d24:	b1 81       	ldd	r27, Z+1	; 0x01
    1d26:	14 96       	adiw	r26, 0x04	; 4
    1d28:	ed 91       	ld	r30, X+
    1d2a:	fc 91       	ld	r31, X
    1d2c:	15 97       	sbiw	r26, 0x05	; 5
    1d2e:	30 97       	sbiw	r30, 0x00	; 0
    1d30:	c1 f7       	brne	.-16     	; 0x1d22 <sync+0x26>
    1d32:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <current>
    1d36:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <current+0x1>
    1d3a:	a2 17       	cp	r26, r18
    1d3c:	b3 07       	cpc	r27, r19
    1d3e:	11 f0       	breq	.+4      	; 0x1d44 <sync+0x48>
    1d40:	11 11       	cpse	r17, r1
    1d42:	07 c0       	rjmp	.+14     	; 0x1d52 <sync+0x56>
    1d44:	11 23       	and	r17, r17
    1d46:	09 f4       	brne	.+2      	; 0x1d4a <sync+0x4e>
    1d48:	4a c0       	rjmp	.+148    	; 0x1dde <sync+0xe2>
    1d4a:	78 94       	sei
    1d4c:	8f ef       	ldi	r24, 0xFF	; 255
    1d4e:	9f ef       	ldi	r25, 0xFF	; 255
    1d50:	4e c0       	rjmp	.+156    	; 0x1dee <sync+0xf2>
    1d52:	8a 81       	ldd	r24, Y+2	; 0x02
    1d54:	9b 81       	ldd	r25, Y+3	; 0x03
    1d56:	00 97       	sbiw	r24, 0x00	; 0
    1d58:	19 f0       	breq	.+6      	; 0x1d60 <sync+0x64>
    1d5a:	fc 01       	movw	r30, r24
    1d5c:	15 82       	std	Z+5, r1	; 0x05
    1d5e:	14 82       	std	Z+4, r1	; 0x04
    1d60:	3b 83       	std	Y+3, r19	; 0x03
    1d62:	2a 83       	std	Y+2, r18	; 0x02
    1d64:	f9 01       	movw	r30, r18
    1d66:	d5 83       	std	Z+5, r29	; 0x05
    1d68:	c4 83       	std	Z+4, r28	; 0x04
    1d6a:	cd 01       	movw	r24, r26
    1d6c:	0e 94 c3 03 	call	0x786	; 0x786 <dispatch>
    1d70:	e0 91 42 01 	lds	r30, 0x0142	; 0x800142 <current>
    1d74:	f0 91 43 01 	lds	r31, 0x0143	; 0x800143 <current+0x1>
    1d78:	82 81       	ldd	r24, Z+2	; 0x02
    1d7a:	93 81       	ldd	r25, Z+3	; 0x03
    1d7c:	89 2b       	or	r24, r25
    1d7e:	31 f4       	brne	.+12     	; 0x1d8c <sync+0x90>
    1d80:	11 23       	and	r17, r17
    1d82:	81 f1       	breq	.+96     	; 0x1de4 <sync+0xe8>
    1d84:	78 94       	sei
    1d86:	80 e0       	ldi	r24, 0x00	; 0
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	31 c0       	rjmp	.+98     	; 0x1dee <sync+0xf2>
    1d8c:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <current>
    1d90:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <current+0x1>
    1d94:	99 83       	std	Y+1, r25	; 0x01
    1d96:	88 83       	st	Y, r24
    1d98:	11 23       	and	r17, r17
    1d9a:	29 f0       	breq	.+10     	; 0x1da6 <sync+0xaa>
    1d9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1da0:	01 97       	sbiw	r24, 0x01	; 1
    1da2:	09 f0       	breq	.+2      	; 0x1da6 <sync+0xaa>
    1da4:	78 94       	sei
    1da6:	b6 01       	movw	r22, r12
    1da8:	ce 01       	movw	r24, r28
    1daa:	f7 01       	movw	r30, r14
    1dac:	09 95       	icall
    1dae:	f8 2e       	mov	r15, r24
    1db0:	09 2f       	mov	r16, r25
    1db2:	8f b7       	in	r24, 0x3f	; 63
    1db4:	f8 94       	cli
    1db6:	19 82       	std	Y+1, r1	; 0x01
    1db8:	18 82       	st	Y, r1
    1dba:	8a 81       	ldd	r24, Y+2	; 0x02
    1dbc:	9b 81       	ldd	r25, Y+3	; 0x03
    1dbe:	82 30       	cpi	r24, 0x02	; 2
    1dc0:	91 05       	cpc	r25, r1
    1dc2:	38 f0       	brcs	.+14     	; 0x1dd2 <sync+0xd6>
    1dc4:	1b 82       	std	Y+3, r1	; 0x03
    1dc6:	1a 82       	std	Y+2, r1	; 0x02
    1dc8:	fc 01       	movw	r30, r24
    1dca:	15 82       	std	Z+5, r1	; 0x05
    1dcc:	14 82       	std	Z+4, r1	; 0x04
    1dce:	0e 94 c3 03 	call	0x786	; 0x786 <dispatch>
    1dd2:	11 23       	and	r17, r17
    1dd4:	51 f0       	breq	.+20     	; 0x1dea <sync+0xee>
    1dd6:	78 94       	sei
    1dd8:	8f 2d       	mov	r24, r15
    1dda:	90 2f       	mov	r25, r16
    1ddc:	08 c0       	rjmp	.+16     	; 0x1dee <sync+0xf2>
    1dde:	8f ef       	ldi	r24, 0xFF	; 255
    1de0:	9f ef       	ldi	r25, 0xFF	; 255
    1de2:	05 c0       	rjmp	.+10     	; 0x1dee <sync+0xf2>
    1de4:	80 e0       	ldi	r24, 0x00	; 0
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	02 c0       	rjmp	.+4      	; 0x1dee <sync+0xf2>
    1dea:	8f 2d       	mov	r24, r15
    1dec:	90 2f       	mov	r25, r16
    1dee:	df 91       	pop	r29
    1df0:	cf 91       	pop	r28
    1df2:	1f 91       	pop	r17
    1df4:	0f 91       	pop	r16
    1df6:	ff 90       	pop	r15
    1df8:	ef 90       	pop	r14
    1dfa:	df 90       	pop	r13
    1dfc:	cf 90       	pop	r12
    1dfe:	08 95       	ret

00001e00 <run>:
    1e00:	00 91 42 01 	lds	r16, 0x0142	; 0x800142 <current>
    1e04:	10 91 43 01 	lds	r17, 0x0143	; 0x800143 <current+0x1>
    1e08:	8a e5       	ldi	r24, 0x5A	; 90
    1e0a:	91 e0       	ldi	r25, 0x01	; 1
    1e0c:	0e 94 45 04 	call	0x88a	; 0x88a <dequeue>
    1e10:	ec 01       	movw	r28, r24
    1e12:	f8 01       	movw	r30, r16
    1e14:	93 83       	std	Z+3, r25	; 0x03
    1e16:	82 83       	std	Z+2, r24	; 0x02
    1e18:	78 94       	sei
    1e1a:	6c 85       	ldd	r22, Y+12	; 0x0c
    1e1c:	7d 85       	ldd	r23, Y+13	; 0x0d
    1e1e:	4e 85       	ldd	r20, Y+14	; 0x0e
    1e20:	5f 85       	ldd	r21, Y+15	; 0x0f
    1e22:	8a 85       	ldd	r24, Y+10	; 0x0a
    1e24:	9b 85       	ldd	r25, Y+11	; 0x0b
    1e26:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <sync>
    1e2a:	8f b7       	in	r24, 0x3f	; 63
    1e2c:	f8 94       	cli
    1e2e:	68 e4       	ldi	r22, 0x48	; 72
    1e30:	71 e0       	ldi	r23, 0x01	; 1
    1e32:	ce 01       	movw	r24, r28
    1e34:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <insert>
    1e38:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <activeStack>
    1e3c:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <activeStack+0x1>
    1e40:	01 90       	ld	r0, Z+
    1e42:	f0 81       	ld	r31, Z
    1e44:	e0 2d       	mov	r30, r0
    1e46:	c2 81       	ldd	r28, Z+2	; 0x02
    1e48:	d3 81       	ldd	r29, Z+3	; 0x03
    1e4a:	e0 91 5a 01 	lds	r30, 0x015A	; 0x80015a <msgQ>
    1e4e:	f0 91 5b 01 	lds	r31, 0x015B	; 0x80015b <msgQ+0x1>
    1e52:	30 97       	sbiw	r30, 0x00	; 0
    1e54:	a1 f0       	breq	.+40     	; 0x1e7e <run+0x7e>
    1e56:	20 97       	sbiw	r28, 0x00	; 0
    1e58:	99 f2       	breq	.-90     	; 0x1e00 <run>
    1e5a:	86 81       	ldd	r24, Z+6	; 0x06
    1e5c:	97 81       	ldd	r25, Z+7	; 0x07
    1e5e:	a0 85       	ldd	r26, Z+8	; 0x08
    1e60:	b1 85       	ldd	r27, Z+9	; 0x09
    1e62:	4e 81       	ldd	r20, Y+6	; 0x06
    1e64:	5f 81       	ldd	r21, Y+7	; 0x07
    1e66:	68 85       	ldd	r22, Y+8	; 0x08
    1e68:	79 85       	ldd	r23, Y+9	; 0x09
    1e6a:	84 1b       	sub	r24, r20
    1e6c:	95 0b       	sbc	r25, r21
    1e6e:	a6 0b       	sbc	r26, r22
    1e70:	b7 0b       	sbc	r27, r23
    1e72:	18 16       	cp	r1, r24
    1e74:	19 06       	cpc	r1, r25
    1e76:	1a 06       	cpc	r1, r26
    1e78:	1b 06       	cpc	r1, r27
    1e7a:	0c f0       	brlt	.+2      	; 0x1e7e <run+0x7e>
    1e7c:	c1 cf       	rjmp	.-126    	; 0x1e00 <run>
    1e7e:	84 e4       	ldi	r24, 0x44	; 68
    1e80:	91 e0       	ldi	r25, 0x01	; 1
    1e82:	0e 94 70 04 	call	0x8e0	; 0x8e0 <pop>
    1e86:	66 e4       	ldi	r22, 0x46	; 70
    1e88:	71 e0       	ldi	r23, 0x01	; 1
    1e8a:	0e 94 66 04 	call	0x8cc	; 0x8cc <push>
    1e8e:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <activeStack>
    1e92:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <activeStack+0x1>
    1e96:	02 c0       	rjmp	.+4      	; 0x1e9c <run+0x9c>
    1e98:	a0 81       	ld	r26, Z
    1e9a:	b1 81       	ldd	r27, Z+1	; 0x01
    1e9c:	14 96       	adiw	r26, 0x04	; 4
    1e9e:	ed 91       	ld	r30, X+
    1ea0:	fc 91       	ld	r31, X
    1ea2:	15 97       	sbiw	r26, 0x05	; 5
    1ea4:	30 97       	sbiw	r30, 0x00	; 0
    1ea6:	c1 f7       	brne	.-16     	; 0x1e98 <run+0x98>
    1ea8:	cd 01       	movw	r24, r26
    1eaa:	0e 94 c3 03 	call	0x786	; 0x786 <dispatch>
    1eae:	a8 cf       	rjmp	.-176    	; 0x1e00 <run>

00001eb0 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    1eb0:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    1eb2:	42 31       	cpi	r20, 0x12	; 18
    1eb4:	b8 f4       	brcc	.+46     	; 0x1ee4 <install+0x34>
        char status;
        DISABLE(status);
    1eb6:	9f b7       	in	r25, 0x3f	; 63
    1eb8:	90 78       	andi	r25, 0x80	; 128
    1eba:	f8 94       	cli
        otable[i] = obj;
    1ebc:	50 e0       	ldi	r21, 0x00	; 0
    1ebe:	44 0f       	add	r20, r20
    1ec0:	55 1f       	adc	r21, r21
    1ec2:	da 01       	movw	r26, r20
    1ec4:	a4 5a       	subi	r26, 0xA4	; 164
    1ec6:	be 4f       	sbci	r27, 0xFE	; 254
    1ec8:	ed 93       	st	X+, r30
    1eca:	fc 93       	st	X, r31
        mtable[i] = m;
    1ecc:	da 01       	movw	r26, r20
    1ece:	ac 50       	subi	r26, 0x0C	; 12
    1ed0:	be 4f       	sbci	r27, 0xFE	; 254
    1ed2:	6d 93       	st	X+, r22
    1ed4:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1ed6:	21 e0       	ldi	r18, 0x01	; 1
    1ed8:	30 e0       	ldi	r19, 0x00	; 0
    1eda:	33 83       	std	Z+3, r19	; 0x03
    1edc:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    1ede:	99 23       	and	r25, r25
    1ee0:	09 f0       	breq	.+2      	; 0x1ee4 <install+0x34>
    1ee2:	78 94       	sei
    1ee4:	08 95       	ret

00001ee6 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1ee6:	8c 01       	movw	r16, r24
    1ee8:	7b 01       	movw	r14, r22
    1eea:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1eec:	8f b7       	in	r24, 0x3f	; 63
    1eee:	f8 94       	cli
    initialize();
    1ef0:	0e 94 24 03 	call	0x648	; 0x648 <initialize>
    ENABLE(1);
    1ef4:	78 94       	sei
    if (m != NULL)
    1ef6:	e1 14       	cp	r14, r1
    1ef8:	f1 04       	cpc	r15, r1
    1efa:	41 f0       	breq	.+16     	; 0x1f0c <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1efc:	20 e0       	ldi	r18, 0x00	; 0
    1efe:	30 e0       	ldi	r19, 0x00	; 0
    1f00:	a9 01       	movw	r20, r18
    1f02:	60 e0       	ldi	r22, 0x00	; 0
    1f04:	70 e0       	ldi	r23, 0x00	; 0
    1f06:	cb 01       	movw	r24, r22
    1f08:	0e 94 75 0d 	call	0x1aea	; 0x1aea <async>
    DISABLE(status);
    1f0c:	8f b7       	in	r24, 0x3f	; 63
    1f0e:	f8 94       	cli
    idle();
    1f10:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <idle>

00001f14 <writeHighToPort>:
	}
	if(bitnr == 6){
		//PORTE |= 0x20;
		//LCDDR2 |= 0x06;
	}*/
	PORTE |= (1<<bitnr);
    1f14:	2e b1       	in	r18, 0x0e	; 14
    1f16:	81 e0       	ldi	r24, 0x01	; 1
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	02 c0       	rjmp	.+4      	; 0x1f20 <writeHighToPort+0xc>
    1f1c:	88 0f       	add	r24, r24
    1f1e:	99 1f       	adc	r25, r25
    1f20:	6a 95       	dec	r22
    1f22:	e2 f7       	brpl	.-8      	; 0x1f1c <writeHighToPort+0x8>
    1f24:	82 2b       	or	r24, r18
    1f26:	8e b9       	out	0x0e, r24	; 14
    1f28:	08 95       	ret

00001f2a <writeLowToPort>:
	}
	if(bitnr == 6){
		//PORTE &= 0xDF;
		LCDDR2 &= 0xF9;
	}*/
	PORTE &= (~(1<<bitnr));
    1f2a:	2e b1       	in	r18, 0x0e	; 14
    1f2c:	81 e0       	ldi	r24, 0x01	; 1
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	02 c0       	rjmp	.+4      	; 0x1f36 <writeLowToPort+0xc>
    1f32:	88 0f       	add	r24, r24
    1f34:	99 1f       	adc	r25, r25
    1f36:	6a 95       	dec	r22
    1f38:	e2 f7       	brpl	.-8      	; 0x1f32 <writeLowToPort+0x8>
    1f3a:	80 95       	com	r24
    1f3c:	82 23       	and	r24, r18
    1f3e:	8e b9       	out	0x0e, r24	; 14
    1f40:	08 95       	ret

00001f42 <__divmodhi4>:
    1f42:	97 fb       	bst	r25, 7
    1f44:	07 2e       	mov	r0, r23
    1f46:	16 f4       	brtc	.+4      	; 0x1f4c <__divmodhi4+0xa>
    1f48:	00 94       	com	r0
    1f4a:	07 d0       	rcall	.+14     	; 0x1f5a <__divmodhi4_neg1>
    1f4c:	77 fd       	sbrc	r23, 7
    1f4e:	09 d0       	rcall	.+18     	; 0x1f62 <__divmodhi4_neg2>
    1f50:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <__udivmodhi4>
    1f54:	07 fc       	sbrc	r0, 7
    1f56:	05 d0       	rcall	.+10     	; 0x1f62 <__divmodhi4_neg2>
    1f58:	3e f4       	brtc	.+14     	; 0x1f68 <__divmodhi4_exit>

00001f5a <__divmodhi4_neg1>:
    1f5a:	90 95       	com	r25
    1f5c:	81 95       	neg	r24
    1f5e:	9f 4f       	sbci	r25, 0xFF	; 255
    1f60:	08 95       	ret

00001f62 <__divmodhi4_neg2>:
    1f62:	70 95       	com	r23
    1f64:	61 95       	neg	r22
    1f66:	7f 4f       	sbci	r23, 0xFF	; 255

00001f68 <__divmodhi4_exit>:
    1f68:	08 95       	ret

00001f6a <__divmodsi4>:
    1f6a:	05 2e       	mov	r0, r21
    1f6c:	97 fb       	bst	r25, 7
    1f6e:	1e f4       	brtc	.+6      	; 0x1f76 <__divmodsi4+0xc>
    1f70:	00 94       	com	r0
    1f72:	0e 94 cc 0f 	call	0x1f98	; 0x1f98 <__negsi2>
    1f76:	57 fd       	sbrc	r21, 7
    1f78:	07 d0       	rcall	.+14     	; 0x1f88 <__divmodsi4_neg2>
    1f7a:	0e 94 f3 0f 	call	0x1fe6	; 0x1fe6 <__udivmodsi4>
    1f7e:	07 fc       	sbrc	r0, 7
    1f80:	03 d0       	rcall	.+6      	; 0x1f88 <__divmodsi4_neg2>
    1f82:	4e f4       	brtc	.+18     	; 0x1f96 <__divmodsi4_exit>
    1f84:	0c 94 cc 0f 	jmp	0x1f98	; 0x1f98 <__negsi2>

00001f88 <__divmodsi4_neg2>:
    1f88:	50 95       	com	r21
    1f8a:	40 95       	com	r20
    1f8c:	30 95       	com	r19
    1f8e:	21 95       	neg	r18
    1f90:	3f 4f       	sbci	r19, 0xFF	; 255
    1f92:	4f 4f       	sbci	r20, 0xFF	; 255
    1f94:	5f 4f       	sbci	r21, 0xFF	; 255

00001f96 <__divmodsi4_exit>:
    1f96:	08 95       	ret

00001f98 <__negsi2>:
    1f98:	90 95       	com	r25
    1f9a:	80 95       	com	r24
    1f9c:	70 95       	com	r23
    1f9e:	61 95       	neg	r22
    1fa0:	7f 4f       	sbci	r23, 0xFF	; 255
    1fa2:	8f 4f       	sbci	r24, 0xFF	; 255
    1fa4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fa6:	08 95       	ret

00001fa8 <__muluhisi3>:
    1fa8:	0e 94 15 10 	call	0x202a	; 0x202a <__umulhisi3>
    1fac:	a5 9f       	mul	r26, r21
    1fae:	90 0d       	add	r25, r0
    1fb0:	b4 9f       	mul	r27, r20
    1fb2:	90 0d       	add	r25, r0
    1fb4:	a4 9f       	mul	r26, r20
    1fb6:	80 0d       	add	r24, r0
    1fb8:	91 1d       	adc	r25, r1
    1fba:	11 24       	eor	r1, r1
    1fbc:	08 95       	ret

00001fbe <__udivmodhi4>:
    1fbe:	aa 1b       	sub	r26, r26
    1fc0:	bb 1b       	sub	r27, r27
    1fc2:	51 e1       	ldi	r21, 0x11	; 17
    1fc4:	07 c0       	rjmp	.+14     	; 0x1fd4 <__udivmodhi4_ep>

00001fc6 <__udivmodhi4_loop>:
    1fc6:	aa 1f       	adc	r26, r26
    1fc8:	bb 1f       	adc	r27, r27
    1fca:	a6 17       	cp	r26, r22
    1fcc:	b7 07       	cpc	r27, r23
    1fce:	10 f0       	brcs	.+4      	; 0x1fd4 <__udivmodhi4_ep>
    1fd0:	a6 1b       	sub	r26, r22
    1fd2:	b7 0b       	sbc	r27, r23

00001fd4 <__udivmodhi4_ep>:
    1fd4:	88 1f       	adc	r24, r24
    1fd6:	99 1f       	adc	r25, r25
    1fd8:	5a 95       	dec	r21
    1fda:	a9 f7       	brne	.-22     	; 0x1fc6 <__udivmodhi4_loop>
    1fdc:	80 95       	com	r24
    1fde:	90 95       	com	r25
    1fe0:	bc 01       	movw	r22, r24
    1fe2:	cd 01       	movw	r24, r26
    1fe4:	08 95       	ret

00001fe6 <__udivmodsi4>:
    1fe6:	a1 e2       	ldi	r26, 0x21	; 33
    1fe8:	1a 2e       	mov	r1, r26
    1fea:	aa 1b       	sub	r26, r26
    1fec:	bb 1b       	sub	r27, r27
    1fee:	fd 01       	movw	r30, r26
    1ff0:	0d c0       	rjmp	.+26     	; 0x200c <__udivmodsi4_ep>

00001ff2 <__udivmodsi4_loop>:
    1ff2:	aa 1f       	adc	r26, r26
    1ff4:	bb 1f       	adc	r27, r27
    1ff6:	ee 1f       	adc	r30, r30
    1ff8:	ff 1f       	adc	r31, r31
    1ffa:	a2 17       	cp	r26, r18
    1ffc:	b3 07       	cpc	r27, r19
    1ffe:	e4 07       	cpc	r30, r20
    2000:	f5 07       	cpc	r31, r21
    2002:	20 f0       	brcs	.+8      	; 0x200c <__udivmodsi4_ep>
    2004:	a2 1b       	sub	r26, r18
    2006:	b3 0b       	sbc	r27, r19
    2008:	e4 0b       	sbc	r30, r20
    200a:	f5 0b       	sbc	r31, r21

0000200c <__udivmodsi4_ep>:
    200c:	66 1f       	adc	r22, r22
    200e:	77 1f       	adc	r23, r23
    2010:	88 1f       	adc	r24, r24
    2012:	99 1f       	adc	r25, r25
    2014:	1a 94       	dec	r1
    2016:	69 f7       	brne	.-38     	; 0x1ff2 <__udivmodsi4_loop>
    2018:	60 95       	com	r22
    201a:	70 95       	com	r23
    201c:	80 95       	com	r24
    201e:	90 95       	com	r25
    2020:	9b 01       	movw	r18, r22
    2022:	ac 01       	movw	r20, r24
    2024:	bd 01       	movw	r22, r26
    2026:	cf 01       	movw	r24, r30
    2028:	08 95       	ret

0000202a <__umulhisi3>:
    202a:	a2 9f       	mul	r26, r18
    202c:	b0 01       	movw	r22, r0
    202e:	b3 9f       	mul	r27, r19
    2030:	c0 01       	movw	r24, r0
    2032:	a3 9f       	mul	r26, r19
    2034:	70 0d       	add	r23, r0
    2036:	81 1d       	adc	r24, r1
    2038:	11 24       	eor	r1, r1
    203a:	91 1d       	adc	r25, r1
    203c:	b2 9f       	mul	r27, r18
    203e:	70 0d       	add	r23, r0
    2040:	81 1d       	adc	r24, r1
    2042:	11 24       	eor	r1, r1
    2044:	91 1d       	adc	r25, r1
    2046:	08 95       	ret

00002048 <setjmp>:
    2048:	dc 01       	movw	r26, r24
    204a:	2d 92       	st	X+, r2
    204c:	3d 92       	st	X+, r3
    204e:	4d 92       	st	X+, r4
    2050:	5d 92       	st	X+, r5
    2052:	6d 92       	st	X+, r6
    2054:	7d 92       	st	X+, r7
    2056:	8d 92       	st	X+, r8
    2058:	9d 92       	st	X+, r9
    205a:	ad 92       	st	X+, r10
    205c:	bd 92       	st	X+, r11
    205e:	cd 92       	st	X+, r12
    2060:	dd 92       	st	X+, r13
    2062:	ed 92       	st	X+, r14
    2064:	fd 92       	st	X+, r15
    2066:	0d 93       	st	X+, r16
    2068:	1d 93       	st	X+, r17
    206a:	cd 93       	st	X+, r28
    206c:	dd 93       	st	X+, r29
    206e:	ff 91       	pop	r31
    2070:	ef 91       	pop	r30
    2072:	8d b7       	in	r24, 0x3d	; 61
    2074:	8d 93       	st	X+, r24
    2076:	8e b7       	in	r24, 0x3e	; 62
    2078:	8d 93       	st	X+, r24
    207a:	8f b7       	in	r24, 0x3f	; 63
    207c:	8d 93       	st	X+, r24
    207e:	ed 93       	st	X+, r30
    2080:	fd 93       	st	X+, r31
    2082:	88 27       	eor	r24, r24
    2084:	99 27       	eor	r25, r25
    2086:	09 94       	ijmp

00002088 <longjmp>:
    2088:	dc 01       	movw	r26, r24
    208a:	cb 01       	movw	r24, r22
    208c:	81 30       	cpi	r24, 0x01	; 1
    208e:	91 05       	cpc	r25, r1
    2090:	81 1d       	adc	r24, r1
    2092:	2d 90       	ld	r2, X+
    2094:	3d 90       	ld	r3, X+
    2096:	4d 90       	ld	r4, X+
    2098:	5d 90       	ld	r5, X+
    209a:	6d 90       	ld	r6, X+
    209c:	7d 90       	ld	r7, X+
    209e:	8d 90       	ld	r8, X+
    20a0:	9d 90       	ld	r9, X+
    20a2:	ad 90       	ld	r10, X+
    20a4:	bd 90       	ld	r11, X+
    20a6:	cd 90       	ld	r12, X+
    20a8:	dd 90       	ld	r13, X+
    20aa:	ed 90       	ld	r14, X+
    20ac:	fd 90       	ld	r15, X+
    20ae:	0d 91       	ld	r16, X+
    20b0:	1d 91       	ld	r17, X+
    20b2:	cd 91       	ld	r28, X+
    20b4:	dd 91       	ld	r29, X+
    20b6:	ed 91       	ld	r30, X+
    20b8:	fd 91       	ld	r31, X+
    20ba:	0d 90       	ld	r0, X+
    20bc:	f8 94       	cli
    20be:	fe bf       	out	0x3e, r31	; 62
    20c0:	0f be       	out	0x3f, r0	; 63
    20c2:	ed bf       	out	0x3d, r30	; 61
    20c4:	ed 91       	ld	r30, X+
    20c6:	fd 91       	ld	r31, X+
    20c8:	09 94       	ijmp

000020ca <_exit>:
    20ca:	f8 94       	cli

000020cc <__stop_program>:
    20cc:	ff cf       	rjmp	.-2      	; 0x20cc <__stop_program>
